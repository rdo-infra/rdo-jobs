- hosts: all
  name: playbook for rdoinfo-DLRN-check
  tasks:
    - name: Load rdoinfo data
      include_role:
        name: rdoinfo-data
        tasks_from: load-releases-status

    - name: link rdoinfo dir to /tmp/rdoinfo
      file:
        src: "{{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdoinfo'].src_dir }}"
        dest: /tmp/rdoinfo
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        state: link

    - name: Copy rdoinfo-DLRN.sh script
      copy:
        src: rdoinfo-DLRN.sh
        dest: '{{ ansible_user_dir }}/rdoinfo-DLRN.sh'
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        mode: 0755

    - name: Setup deps repo for mock
      get_url:
        url: https://trunk.rdoproject.org/centos8-master/delorean-deps.repo
        dest: /etc/yum.repos.d/delorean-deps.repo
      become: true
      when:
        - ansible_distribution == "CentOS"
        - ansible_distribution_major_version == '8'

    - name: Ensure bindep.txt dependencies are installed
      include_role:
        name: bindep
      vars:
        bindep_dir: "{{ ansible_user_dir }}/{{ zuul.projects['softwarefactory-project.io/DLRN'].src_dir }}"

    - name: Remove deps repo
      file:
        path: /etc/yum.repos.d/delorean-deps.repo
        state: absent
      become: true
      when:
        - ansible_distribution == "CentOS"
        - ansible_distribution_major_version == '8'

    - name: Ensure user in mock group
      user:
        name: "{{ ansible_user }}"
        groups: mock
        append: true
      become: true

    - name: Set up mock configuration
      shell:
        cmd: |
          cat << EOF | tee /etc/mock/site-defaults.cfg
          config_opts['use_bootstrap'] = False
          config_opts['dnf_warning'] = False
          EOF
      become: true
      changed_when: true

    - name: Build packages for tags being updated
      shell:
        cmd: |
          set +e -x
          virtualenv --system-site-packages .venv
          . .venv/bin/activate
          pip install rdopkg

          export CENTOS_VERS="{{ centos_version | default('centos7') }}"

          TAGS_DIFF=$(rdopkg info-tags-diff .)
          RDO_RELEASES="{{ _rdo_releases | rejectattr('status', 'match', '^unmaintained$') | selectattr('repos', 'search', 'el' + centos_version[-1]) | map(attribute='name') | list | join(' ') }}"
          RDO_MASTER_RELEASE="{{ rdo_master_release }}"
          RDO_RELEASES=$(echo $RDO_RELEASES | sed "s/${RDO_MASTER_RELEASE}/${RDO_MASTER_RELEASE}-uc/")
          echo $RDO_RELEASES

          declare -A PACKAGES_UPDATED
          while read line; do
              PKGNAME=$(awk '{print $1}' <<< $line)
              for release in $RDO_RELEASES; do
                  if [[ -n $(echo "$line" | grep -w $release) ]]; then
                      PACKAGES_UPDATED[$release]+="$PKGNAME "
                  fi
              done
          done <<< "${TAGS_DIFF}"

          pushd "{{ ansible_user_dir }}/{{ zuul.projects['softwarefactory-project.io/DLRN'].src_dir }}"
          # Create log directory always
          mkdir -p logs
          ret=0
          TIMEOUT="{{ zuul.timeout | default('10800') }}"
          for release in $RDO_RELEASES; do
              if [ -n "${PACKAGES_UPDATED[$release]}" ]; then
                  timeout --signal=SIGKILL $TIMEOUT  {{ ansible_user_dir }}/rdoinfo-DLRN.sh $release "${PACKAGES_UPDATED[$release]}" "${CENTOS_VERS}"
                  ret1=$?
                  if [ $ret1 -ne 0 ]; then
                      ret=$ret1
                  fi
              fi
              # The data/ contents have been archived already, remove to avoid issues with the next branch
              rm -rf data
              sudo rm -rf /var/cache/mock/*
          done
          popd

          exit $ret
        chdir: "{{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdoinfo'].src_dir }}"
      changed_when: true
      environment:
        LANG: 'en_US.UTF-8'
