- hosts: all
  tasks:

    - name: Create workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - name: Create periodic_job fact
      set_fact:
        periodic_job: "{{ periodic_job|default(false) or 'periodic' in zuul.pipeline }}"

    - block:
        - name: Do not run weirdo if there are no new packages to test in parent job
          debug:
            msg: "No new packages detected, skiping weirdo execution"

        - meta: end_play
      when:
        - not periodic_job|default(false)
        - buildset_artifacts_url is not defined

    - name: Create centos_releasever fact
      set_fact:
        centos_releasever: "{{ ansible_distribution_major_version | default('7') }}"
      when: centos_releasever is not defined

    - name: set centos_release fact
      set_fact:
        centos_release: "centos{{ ansible_distribution_major_version | default('7') }}"

    - name: Check if job needs to be run or not based on changes
      shell:
        cmd: |
          # This builder, when run from a child job of validate-buildsys-tags
          # configures the temporary repositories created by it
          # This allows to install the packages in that repository and test
          # them.
          set +e -x
          # This job requires variables 'rdoinfo_release' and 'rdoinfo_phase' to be defined.

          CREPOS_FILE=changed_repos.txt
          PROJECT="{{ zuul.project.name }}"
          RELEASE="{{ rdoinfo_release }}"
          PHASE="{{ rdoinfo_phase }}"
          DIST_VER="{{ centos_releasever }}"
          case $PROJECT in
          rdoinfo)
            REPO="cloud${DIST_VER}-openstack-$RELEASE-$PHASE"
          ;;
          nfvinfo)
            REPO="nfv${DIST_VER}-openvswitch-2-$PHASE"
          ;;
          esac

          if [ -z "{{ rdoinfo_phase|default("") }}" -o -z "{{ rdoinfo_release|default("") }}" ]; then
              echo "ERROR in job definition: rdoinfo_phase or rdoinfo_release are not defined"
              exit 1
          fi

          # Set log path
          logs={{ buildset_artifacts_url }}

          # If we could not find a working repository, give up
          curl -o $CREPOS_FILE -sf "$logs/repos/changed_repos.txt" || exit 1

          if ! grep -q -E ${REPO} $CREPOS_FILE; then
              echo "INFO: this test is not required"| tee not_required
              exit 0
          fi

        chdir: "{{ ansible_user_dir }}/workspace"
      changed_when: true
      when: not periodic_job|default(false)

    - name: Detect if we created the file to stop quickstart run
      stat:
        path: "{{ ansible_user_dir }}/workspace/not_required"
      register: stop_file
      when: not periodic_job|default(false)

    - name: Setup weirdo roles
      shell:
        cmd: |
          export WBASE="{{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/weirdo'].src_dir }}";
          mkdir -p $WBASE/playbooks/roles
          {% for project in ["common", "logs", "kolla", "packstack", "puppet-openstack"] %}
            ln -s "{{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/ansible-role-weirdo-' + project].src_dir }}" $WBASE/playbooks/roles/{{ project }};  # noqa 204
          {% endfor %}
      changed_when: true

    - name: Run weirdo for the desired project and scenario
      shell:
        cmd: |
          set -e -x

          MASTER="yoga"
          RELEASE="{{ rdoinfo_release }}"
          PHASE="{{ rdoinfo_phase }}"
          PROJECT="{{ zuul.project.name }}"
          DIST_VER="{{ centos_releasever }}"
          case $PROJECT in
          rdoinfo)
            REPO="cloud${DIST_VER}-openstack-$RELEASE-$PHASE"
          ;;
          nfvinfo)
            REPO="nfv${DIST_VER}-openvswitch-2-$PHASE"
          ;;
          esac

          # Find out if it is puppet or packstack and scenario
          if [[ "{{ zuul.job }}" == *"puppet"* ]]; then
              project="puppet-openstack"
          else
              project="packstack"
          fi
          scenario="{{ scenario }}"

          # Set version related variables
          if [ $RELEASE = $MASTER ]; then
            VERSION="master"
            O_RELEASE="master"
          else
            VERSION="stable/$RELEASE"
            O_RELEASE="$RELEASE"
          fi

          {% if not periodic_job|default(false) %}
          # Temporary repo URL
          logs={{ buildset_artifacts_url }}
          TEMP_REPO_URL="${logs}/repos/$REPO/temp-$REPO.repo"
          # Collect the list of updated packages in a log file
          UPDATED_PKGS=$(curl "${logs}/repos/$REPO.content.txt" |rev|awk -F'/' '{printf $1","}'|rev)
          if [ ! -d /var/log/weirdo/ ]; then
              sudo mkdir /var/log/weirdo/
          fi
          echo "${REPO}${UPDATED_PKGS}" |sudo tee -a /var/log/weirdo/tested_pkgs_updates.txt
          {% endif %}

          # Release RPM name is different for el7 and el8
          if [[ ${DIST_VER} = 8* ]]; then
              export RELEASE_RPM="rdo-release-${RELEASE}.el8.rpm"
          else
              export RELEASE_RPM="rdo-release-${RELEASE}.rpm"
          fi


          # Prepare Ansible inventory to use localhost
          pushd {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/weirdo'].src_dir }}
          cat <<EOF >hosts
          localhost ansible_connection=local ansible_python_interpreter=/usr/bin/python{{ '3' if centos_release == "centos8" else '2' }}
          [openstack_nodes]
          localhost log_destination=/var/log/weirdo
          EOF

          case $PHASE in
          testing)
              REPOS_URL="http://trunk.rdoproject.org/{{ centos_release }}-${O_RELEASE}/puppet-passed-ci/delorean.repo,https://trunk.rdoproject.org/{{ centos_release }}-${O_RELEASE}/delorean-deps.repo{% if not periodic_job|default(false) %},$TEMP_REPO_URL{% endif %}" # noqa 204
              ADDITIONAL_OPTS=""
          ;;
          release)
              if [ $RELEASE = $MASTER ]; then
                  REPOS_URL="http://trunk.rdoproject.org/centos8-master/puppet-passed-ci/delorean.repo,https://trunk.rdoproject.org/centos8-master/delorean-deps.repo{% if not periodic_job|default(false) %},$TEMP_REPO_URL{% endif %}" # noqa 204
                  ADDITIONAL_OPTS=""
              else
                  REPOS_URL="$TEMP_REPO_URL"
                  ADDITIONAL_OPTS="-e stable_repositories=https://rdoproject.org/repos/openstack-${RELEASE}/${RELEASE_RPM} -e testing_repository=false"
              fi
          ;;
          esac

          tox -e ansible-playbook -- -vv -b -i hosts playbooks/$project-$scenario.yml \
              -e version=$VERSION \
              -e openstack_release=$O_RELEASE \
              -e selinux_enforcing="{{ selinux_enforcing | default('true') }}" \
              -e tempest_from_source=false \
              -e enable_puppet_modules_rpm=true \
          {% if not periodic_job|default(false) %}
              -e trunk_repositories=$REPOS_URL \
          {% endif %}
              $ADDITIONAL_OPTS

      changed_when: true
      environment:
        LANG: 'en_US.UTF-8'
      when: not stop_file.stat.exists|default(true) or periodic_job|default(false)
