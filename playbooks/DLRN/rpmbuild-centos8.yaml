---
- hosts: all
  name: Playbook for DLRN-rpmbuild-centos8 job
  tasks:
    - include_tasks: setup_dlrn.yaml

    - name: write centos8.cfg
      copy:
        dest: "{{ ansible_user_dir }}/{{ zuul.projects['softwarefactory-project.io/DLRN'].src_dir }}/scripts/centos8.cfg"
        content: |
          config_opts['root'] = 'dlrn-centos8-x86_64'
          config_opts['target_arch'] = 'x86_64'
          config_opts['legal_host_arches'] = ('x86_64',)
          config_opts['chroot_setup_cmd'] = 'install basesystem rpm-build python3-devel gcc make python3-sqlalchemy python3-sphinx \
          python3-eventlet python3-six python3-pbr openstack-macros git python3-setuptools_scm'
          config_opts['dist'] = 'el8'  # only useful for --resultdir variable subst
          config_opts['releasever'] = '8'
          config_opts['plugin_conf']['ccache_enable'] = False
          config_opts['package_manager'] = 'dnf'
          config_opts['dnf_install_command'] = 'install dnf dnf-plugins-core distribution-gpg-keys'
          config_opts['plugin_conf']['tmpfs_enable'] = True
          config_opts['plugin_conf']['tmpfs_opts'] = {}
          config_opts['plugin_conf']['tmpfs_opts']['required_ram_mb'] = 4096
          config_opts['plugin_conf']['tmpfs_opts']['max_fs_size'] = '4g'
          config_opts['plugin_conf']['tmpfs_opts']['mode'] = '0755'
          config_opts['plugin_conf']['tmpfs_opts']['keep_mounted'] = True
          config_opts['priorities.conf'] = """
          [main]
          enabled = 1
          check_obsoletes = 1
          """
          
          config_opts['yum.conf'] = """
          [main]
          keepcache=1
          debuglevel=2
          reposdir=/dev/null
          logfile=/var/log/yum.log
          retries=20
          obsoletes=1
          gpgcheck=0
          assumeyes=1
          plugins=1
          syslog_ident=mock
          syslog_device=
          # best=0 is required as a workaround for bz#1677583
          best=0
          module_platform_id=platform:el8
          
          # repos
          
          [BaseOS]
          name=CentOS-$releasever - Base
          mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=BaseOS&infra=$infra
          #baseurl=http://mirror.centos.org/$contentdir/$releasever/BaseOS/$basearch/os/
          gpgcheck=1
          enabled=1
          gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
          
          [AppStream]
          name=CentOS-$releasever - AppStream
          mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=AppStream&infra=$infra
          #baseurl=http://mirror.centos.org/$contentdir/$releasever/AppStream/$basearch/os/
          gpgcheck=1
          enabled=1
          gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
          
          [extras]
          name=CentOS-$releasever - Extras
          mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=extras&infra=$infra
          #baseurl=http://mirror.centos.org/$contentdir/$releasever/extras/$basearch/os/
          gpgcheck=1
          enabled=1
          gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
          
          [PowerTools]
          name=CentOS-$releasever - PowerTools
          mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=PowerTools&infra=$infra
          #baseurl=http://mirror.centos.org/$contentdir/$releasever/PowerTools/$basearch/os/
          gpgcheck=1
          enabled=1
          gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
          
          """

    - name: run_tests.sh
      changed_when: true
      shell:
        cmd: |
          export TAG="{{  tag | default('') }}"
          export PYTHON_VERSION="py36"
          if [ -z "$TAG" ];then
              ARGS="centos8 http://38.145.34.66/centos8-master/"
          else
              ARGS="centos8 http://38.145.34.66/centos8-master/ $TAG"
          fi
          if [[ "{{ zuul.pipeline }}" =~ "openstack-" ]]; then
              ARGS=""
          fi
          ./scripts/run_tests.sh {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdoinfo'].src_dir }} $ARGS
        chdir: "{{ ansible_user_dir }}/{{ zuul.projects['softwarefactory-project.io/DLRN'].src_dir }}"
      environment:
        ZUUL_PROJECT: "{{ zuul.project.name }}"
        ZUUL_BRANCH: "{{ zuul.branch }}"
        ZUUL_PIPELINE: "{{ zuul.pipeline }}"
        ZUUL_CHANGES: "{% set comma = joiner('^') %} {% for chg in zuul['items'] %}{{ comma() }}{{ chg.project.name }}:{{ chg.branch }}:{{ chg.change_url }}{% endfor %}"  # noqa 204
        LANG: 'en_US.UTF-8'
