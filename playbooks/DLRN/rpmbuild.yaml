---
- hosts: all
  tasks:
    - include_tasks: setup_dlrn.yaml

    - name: Ensure mirrors are setup properly
      changed_when: true
      shell:
        cmd: |
            BASE="http://{{ mirror_fqdn | default('mirror.centos.org') }}/centos"
            sed -e "s|^#baseurl=http://mirror.centos.org/centos|baseurl=$BASE|;/^mirrorlist=/d" -i scripts/centos*.cfg # noqa 303
            sed -e "s|^#baseurl=http://mirror.centos.org/\$contentdir|baseurl=$BASE|" -i scripts/centos*.cfg # noqa 303
        chdir: "{{ ansible_user_dir }}/{{ zuul.projects['softwarefactory-project.io/DLRN'].src_dir }}"

    - import_role:
        name: ensure-tox
      vars:
        ensure_global_symlinks: true

    - name: Set up mock configuration
      shell:
        cmd: |
          cat << EOF | tee /etc/mock/site-defaults.cfg
          config_opts['use_bootstrap'] = False
          config_opts['dnf_warning'] = False
          EOF
      become: true
      changed_when: true

    - name: run_tests.sh
      changed_when: true
      shell:
        cmd: |
          export REQUESTS_CA_BUNDLE=/etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt
          export TAG="{{  tag | default('') }}"
          export CENTOS_VERS="{{  centos_version | default('centos7') }}"
          export REPO_SERVER="https://trunk.rdoproject.org"
          export TARGET="centos"
          if [ ${CENTOS_VERS} = "centos8" ]; then
             export PYTHON_VERSION="py36"
             export TARGET="centos8-stream"
          elif [ ${CENTOS_VERS} = "centos9" ]; then
             export PYTHON_VERSION="py36"
             export TARGET="centos9-stream"
          fi
          #
          if [ -z "$TAG" ];then
          ARGS="$TARGET ${REPO_SERVER}/${CENTOS_VERS}/"
          else
          ARGS="$TARGET ${REPO_SERVER}/${CENTOS_VERS}/ $TAG"
          fi
          if [[ "{{ zuul.pipeline }}" =~ "openstack-" ]]; then
              ARGS=""
          fi
          ./scripts/run_tests.sh {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdoinfo'].src_dir }} $ARGS
        chdir: "{{ ansible_user_dir }}/{{ zuul.projects['softwarefactory-project.io/DLRN'].src_dir }}"
      environment:
        ZUUL_PROJECT: "{{ zuul.project.name }}"
        ZUUL_BRANCH: "{{ zuul.branch }}"
        ZUUL_PIPELINE: "{{ zuul.pipeline }}"
        ZUUL_CHANGES: "{% set comma = joiner('^') %} {% for chg in zuul['items'] %}{{ comma() }}{{ chg.project.name }}:{{ chg.branch }}:{{ chg.change_url }}{% endfor %}"  # noqa 204
        LANG: 'en_US.UTF-8'

    - name: Compare dependencies with latest trunk
      changed_when: true
      shell:
        cmd: |
          DESTINATION="$PWD/rpms"
          MOCK_CMD="mock -r data/dlrn-1.cfg "
          mkdir -p $DESTINATION
          cp data/repos/current/*rpm $DESTINATION
          rm $DESTINATION/*src.rpm
          for i in $DESTINATION/*rpm; do
              INSTALL="${INSTALL} --install $i"
              NVR=$(echo $(basename $i)|sed 's/.rpm$//')
              PKG_NAME=$(echo $NVR|rev|cut -d- -f3-|rev)
              INSTALL_TRUNK="$INSTALL_TRUNK --install $PKG_NAME"
              PKGS="$PKGS $PKG_NAME"
          done
          echo -e "INFO: installing subpackages with the patched distgit"
          $MOCK_CMD --init
          $MOCK_CMD $INSTALL
          $MOCK_CMD -q --shell "rpm -qa|sort" > patched_deps.list
          echo -e "INFO: installing subpackages from latest RDO Trunk repo"
          $MOCK_CMD --init
          $MOCK_CMD $INSTALL_TRUNK
          $MOCK_CMD -q --shell "rpm -qa|sort" > trunk_deps.list
          for pkg in $PKGS; do
            sed -i "/^${pkg}-/d" patched_deps.list
            sed -i "/^${pkg}-/d" trunk_deps.list
          done

          echo -e "INFO: comparing installed packages for patched and trunk subpackages"
          echo -e "Packages installed from Trunk < > Packages installed from patched distgit"
          sdiff -s trunk_deps.list patched_deps.list
          if [ $? -ne 0 ]; then
              echo -e "ERROR: There are differences between deps with packages for patched and trunk subpackages"
              exit 1
          fi
        chdir: "{{ ansible_user_dir }}/{{ zuul.projects['softwarefactory-project.io/DLRN'].src_dir }}"
      when: compare_deps|default(false)

    - name: Compare build dependencies with latest trunk
      changed_when: true
      shell:
        cmd: |
          DESTINATION="$PWD/rpms"
          MOCK_CMD="mock -r data/dlrn-1.cfg "
          mkdir -p $DESTINATION
          cp data/repos/current/*src.rpm $DESTINATION
          NVR=$(echo $(basename $DESTINATION/*src.rpm)|sed 's/.rpm$//')
          PKG_NAME=$(echo $NVR|rev|cut -d- -f3-|rev)
          echo -e "INFO: installing build deps with the patched distgit"
          $MOCK_CMD --init
          $MOCK_CMD --installdeps $DESTINATION/*src.rpm
          $MOCK_CMD -q --shell "rpm -qa|sort" > patched_builddeps.list
          echo -e "INFO: installing build deps from latest RDO Trunk repo"
          $MOCK_CMD --init
          # Some new BuildRequirements are expected as part of the migration
          $MOCK_CMD -q --install tox --install pyproject-rpm-macros --install python3-wheel --install python3-tox-current-env
          # Install build deps from latest srpm in trunk
          $MOCK_CMD --dnf-cmd builddep $PKG_NAME
          $MOCK_CMD -q --shell "rpm -qa|sort" > trunk_builddeps.list
          # Using repoquery to list all BRs from trunk repo
          $MOCK_CMD -q --install dnf --install dnf-plugins-core
          $MOCK_CMD -q --shell "dnf repoquery --requires $PKG_NAME.src" > trunk_BRs.list

          echo -e "INFO: comparing installed packages for patched and trunk build dependencies"
          echo -e "Packages installed from Trunk < > Packages installed from patched distgit"
          sdiff -s trunk_builddeps.list patched_builddeps.list
          if [ $? -ne 0 ]; then
              echo -e "ERROR: There are differences between build deps with SRPM for patched and trunk"
              echo -e "INFO: Total Build Requirements from patched spec"
              rpm -q --requires -p $DESTINATION/*src.rpm
              echo -e "INFO: Total Build Requirements from latest Trunk"
              cat trunk_BRs.list
              exit 1
          fi
        chdir: "{{ ansible_user_dir }}/{{ zuul.projects['softwarefactory-project.io/DLRN'].src_dir }}"
      when: compare_builddeps|default(false)

    - name: Check for actual repo in logs from parent job
      shell:
        cmd: |
          set -x
          repository={{ buildset_artifacts_url }}/centos9/current
          # If we could not find a working repository, give up
          curl -o /dev/null -sIf "${repository}" || exit 1
      changed_when: true
      register: check_repo
      ignore_errors: true
      when: compare_files|default(false)

    - meta: end_play
      when: check_repo.rc != 0
      when: compare_files|default(false)

    - name: Compare files with latest trunk
      changed_when: true
      shell:
        cmd: |
          PARENT_JOB_LOGS={{ buildset_artifacts_url }}
          PARENT_JOB_REPO="${PARENT_JOB_LOGS}/centos9/current"
          DESTINATION="$PWD/files"
          PKGS_NAME=""

          mkdir -p $DESTINATION/{patched,trunk}
          PKGS_NVR=$(repoquery -a --nvr --repofrompath=DLRN-rpmbuild-centos9,$PARENT_JOB_REPO --repoid=DLRN-rpmbuild-centos9)

          for nvr in $PKGS_NVR; do
              PKG_NAME=$(echo -e "$nvr" | rev | cut -d- -f3- | rev)
              PKGS="${PKGS} $PKG_NAME"
          done

          echo -e "INFO: downloading the pkgs below from the parent job repo and Trunk:"
          echo -e "$PKGS"
          for pkg in $PKGS; do
              dnf download --disablerepo=* --enablerepo=DLRN-rpmbuild-centos9 --repofrompath=DLRN-rpmbuild-centos9,$PARENT_JOB_REPO $pkg
              # We don't list egg-info/ and dist-info/ files as there are diff in metadata files and we don't care about it
              rpm -qlp ${pkg}* | grep -v -e ".egg-info" -e ".dist-info" > $DESTINATION/patched/$pkg
              rm ${pkg}*
              dnf download \
              --repofrompath=tmp-c9-master-clients,https://trunk.rdoproject.org/centos9-master/component/clients/current/ \
              --repofrompath=tmp-c9-master-puppet,https://trunk.rdoproject.org/centos9-master/component/puppet/current/ \
              --repofrompath=tmp-c9-master-common,https://trunk.rdoproject.org/centos9-master/component/common/current/ \
              --repofrompath=tmp-c9-master-baremetal,https://trunk.rdoproject.org/centos9-master/component/baremetal/current/ \
              --repofrompath=tmp-c9-master-cinder,https://trunk.rdoproject.org/centos9-master/component/cinder/current/ \
              --repofrompath=tmp-c9-master-manila,https://trunk.rdoproject.org/centos9-master/component/manila/current/ \
              --repofrompath=tmp-c9-master-swift,https://trunk.rdoproject.org/centos9-master/component/swift/current/ \
              --repofrompath=tmp-c9-master-compute,https://trunk.rdoproject.org/centos9-master/component/compute/current/ \
              --repofrompath=tmp-c9-master-podified,https://trunk.rdoproject.org/centos9-master/component/podified/current/ \
              --repofrompath=tmp-c9-master-security,https://trunk.rdoproject.org/centos9-master/component/security/current/ \
              --repofrompath=tmp-c9-master-cloudops,https://trunk.rdoproject.org/centos9-master/component/cloudops/current/ \
              --repofrompath=tmp-c9-master-octavia,https://trunk.rdoproject.org/centos9-master/component/octavia/current/ \
              --repofrompath=tmp-c9-master-network,https://trunk.rdoproject.org/centos9-master/component/network/current/ \
              --repofrompath=tmp-c9-master-tempest,https://trunk.rdoproject.org/centos9-master/component/tempest/current/ \
              --repofrompath=tmp-c9-master-glance,https://trunk.rdoproject.org/centos9-master/component/glance/current/ \
              --repofrompath=tmp-c9-master-ui,https://trunk.rdoproject.org/centos9-master/component/ui/current/ \
              $pkg
              # We don't list egg-info/ and dist-info/ files as there are diff in metadata files and we don't care about it
              rpm -qlp ${pkg}* | grep -v -e ".egg-info" -e ".dist-info" > $DESTINATION/trunk/$pkg
              rm ${pkg}*
          done

          patched_nbr=$(find $DESTINATION/patched -type f | wc -l)
          trunk_nbr=$(find $DESTINATION/trunk -type f | wc -l)
          if [[ "$patched_nbr" -ne "$trunk_nbr" ]]; then
              echo "ERROR: file are missing before the comparison between patched and trunk packages"
              find $DESTINATION/patched -type f
              find $DESTINATION/trunk -type f
              exit 1
          fi
 
          RET=0
          for pkg in $PKGS; do
              sdiff -s $DESTINATION/patched/$pkg $DESTINATION/trunk/$pkg 
              if [ $? -ne 0 ]; then
                  RET=1
              fi
          done
          if [ $RET -eq 0 ]; then
              echo -e "INFO: There are no differences in files between patched packages and trunk ones"
          else
              echo -e "ERROR: There are differences in files between patched packages and trunk ones"
              exit 1
          fi
        chdir: "{{ ansible_user_dir }}/{{ zuul.projects['softwarefactory-project.io/DLRN'].src_dir }}"
      when: compare_files|default(false)
