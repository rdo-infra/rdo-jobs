- hosts: controller
  tasks:
    - name: Print the current CRC version
      ansible.builtin.shell: |
        crc version

    - name: Initialize OC Credentials
      ansible.builtin.include_role:
        name: add_crc_creds

    - name: Get resource status
      ansible.builtin.shell: |
        oc project openstack
        oc get csv
        oc get pods

    - name: Get git tag for image tagging
      register: edpm_ansible_tag
      ansible.builtin.command:
        cmd: git show-ref --head --hash head
        chdir: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/edpm-ansible"

    - name: Build openstack-runner image
      community.general.make:
        chdir: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/edpm-ansible"
        target: openstack_ansibleee_build
        params:
          IMG: "quay.rdoproject.org/openstack-k8s-operators/openstack-ansibleee-runner:{{ edpm_ansible_tag.stdout|trim }}"

    - name: Push openstack-runner image
      community.general.make:
        chdir: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/edpm-ansible"
        target: openstack_ansibleee_push
        params:
          IMG: "quay.rdoproject.org/openstack-k8s-operators/openstack-ansibleee-runner:{{ edpm_ansible_tag.stdout|trim }}"

    - name: Get subnode IP
      register: subnode_ip
      ansible.builtin.slurp:
        path: "/etc/nodepool/sub_nodes_private"

    - name: Get Controller IP
      ansible.builtin.slurp:
        path: /etc/nodepool/node_private
      register: controller_ip

    - name: Set some network related facts
      ansible.builtin.set_fact:
        basic_sshd_allowed_ranges: ["{{ controller_ip['content'] | b64decode | trim }}"]
        zuul_worker_ip: >-
          {%- set ssh_env = ansible_env.SSH_CONNECTION | default('') | ansible.builtin.split -%}
          {{ ssh_env[0::2] }}

    - name: Set some EDPM requested variables
      ansible.builtin.set_fact:
        ee_image: "quay.rdoproject.org/openstack-k8s-operators/openstack-ansibleee-runner:{{ edpm_ansible_tag.stdout|trim }}"
        ee_subnode_ip: "{{ subnode_ip['content'] | b64decode | trim }}"
        edpm_sshd_allowed_ranges: >-
          {%- set full_range = basic_sshd_allowed_ranges + zuul_worker_ip + hostvars['controller']['ansible_all_ipv4_addresses'] %}
          {{ full_range | unique }}
        cacheable: true

    - name: Wait for operator to get deployed
      ansible.builtin.shell: |
        oc get csv --no-headers=true | grep -i "succeeded"
      register: operator_status
      until: operator_status.rc == 0
      retries: 20
      delay: 5

    - name: Deploy podified control plane using install_yamls
      vars:
        namespace: openstack
        run_openstack_deploy_prep: true
        run_input: true
        openstack_repo: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/openstack-operator"
        run_crc_storage: true
        command_after_run_crc_storage: |
          sleep 100
        run_script: true
      ansible.builtin.include_role:
        name: use_install_yamls

    - name: Update EDPM Play for periodic jobs
      block:
        - name: Find MD5 hash value from file
          delegate_to: secondary
          ansible.builtin.slurp:
            src: "{{ ansible_user_dir }}/ci-framework/artifacts/repositories/delorean.repo.md5"
          register: md5_value

        - name: Set fact for md5 value string
          ansible.builtin.set_fact:
            md5_value_string: "{{ md5_value['content'] | b64decode | trim }}"
            cacheable: true

        - name: Update Registry name and namespace in Openstack CRD file
          ansible.builtin.replace:
            path: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/install_yamls/out/openstack/openstack/cr/core_v1beta1_openstackcontrolplane.yaml"
            regexp: 'quay.io/tripleozedcentos9'
            replace: 'quay.rdoproject.org/{{ registry_namespace }}'

        - name: Update Image tag in Openstack CRD file
          ansible.builtin.replace:
            path: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/install_yamls/out/openstack/openstack/cr/core_v1beta1_openstackcontrolplane.yaml"
            regexp: 'current-tripleo'
            replace: '{{ md5_value_string | replace(''"'','''') }}'

        - name: Update registry name in EDPM play
          ansible.builtin.replace:
            path: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/install_yamls/devsetup/edpm/edpm-play.yaml"
            regexp: 'quay.io'
            replace: 'quay.rdoproject.org'

        - name: Update registry namespace in EDPM play
          ansible.builtin.replace:
            path: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/install_yamls/devsetup/edpm/edpm-play.yaml"
            regexp: 'tripleozedcentos9'
            replace: '{{ registry_namespace }}'

        - name: Update Image tag in EDPM play
          ansible.builtin.replace:
            path: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/install_yamls/devsetup/edpm/edpm-play.yaml"
            regexp: 'image_tag: "current-tripleo"'
            replace: 'image_tag: {{ md5_value_string }}'
      when: "'periodic' in zuul.job"

    - name: Deply ceph
      include_tasks: ceph_support.yaml

    - name: Deploy OpenStack services
      ansible.builtin.shell: |
        export DEPLOY_DIR={{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/install_yamls/out/openstack/openstack/cr/
        oc kustomize ${DEPLOY_DIR} | oc apply -f -
      args:
        chdir: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/install_yamls"

    - name: Wait for openstack services to get deployed
      ansible.builtin.shell: |
        oc wait openstackcontrolplane.core.openstack.org/openstack --for=condition=Ready
      register: openstack_status
      until: openstack_status.rc == 0
      retries: 20
      delay: 5

    - name: Print Pod and OpenStack resources Status
      ansible.builtin.shell: |
        oc get csv;
        oc get pods;
        oc get OpenStackControlPlane openstack -o json | jq -r '.status.conditions[].type';

    - name: Debug some values
      debug:
        msg: |
          zuul_worker_ip: "{{ zuul_worker_ip }}"
          EDPM_COMPUTE_IP: "{{ ee_subnode_ip }}"
          OPENSTACK_RUNNER_IMG: "{{ ee_image }}"
          EDPM_NETWORK_CONFIG_TEMPLATE: "templates/ci/multinode.j2"
          SSH_KEY_FILE: "{{ ansible_user_dir }}/.ssh/id_rsa"
          EDPM_SSHD_ALLOWED_RANGES: "{{ edpm_sshd_allowed_ranges }}"
          EDPM_CHRONY_NTP_SERVER: pool.ntp.org

    - include_tasks: workarounds.yaml

    - name: Run EDPM Play
      community.general.make:
        target: edpm_play
        chdir: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/install_yamls/devsetup"
        params:
          EDPM_COMPUTE_IP: "{{ ee_subnode_ip }}"
          OPENSTACK_RUNNER_IMG: "{{ ee_image }}"
          EDPM_NETWORK_CONFIG_TEMPLATE: "templates/ci/multinode.j2"
          SSH_KEY_FILE: "{{ ansible_user_dir }}/.ssh/id_rsa"
          EDPM_SSHD_ALLOWED_RANGES: "{{ edpm_sshd_allowed_ranges }}"
          EDPM_CHRONY_NTP_SERVER: pool.ntp.org

    - name: Get deploy-external-dataplane-compute pod name
      register: deploy_external_pod_name
      ansible.builtin.shell:
        cmd: oc get pods -o name | grep -m1 deploy-external
        executable: /bin/bash
      until: deploy_external_pod_name.rc == 0
      retries: 5
      delay: 5

    # oc wait is experimental. setting timeout to 0 will make it immediate.
    # We'll retry 100 times, with a 20 seconds delay between retries.
    # The "Completed" state we can see in the "oc get pods" is actually "Succeeded"
    # in the json output.
    - name: Wait for deploy-external-dataplane-compute to finish
      register: deploy_external_status
      ansible.builtin.shell:
        cmd: "oc wait --timeout=0 --for=jsonpath='{.status.phase}'=Succeeded {{ deploy_external_pod_name.stdout |trim }}"
      until: deploy_external_status.rc == 0
      retries: 100
      delay: 20

    - name: Get the logs of EDPM Play
      ansible.builtin.shell:
        cmd: "oc logs {{ deploy_external_pod_name.stdout |trim }}"
        executable: /bin/bash
