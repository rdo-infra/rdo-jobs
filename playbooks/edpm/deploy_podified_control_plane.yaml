- hosts: controller
  tasks:
    - name: Print the current CRC version
      ansible.builtin.shell: |
        crc version

    - name: Initialize OC Credentials
      ansible.builtin.include_role:
        name: add_crc_creds

    - name: Build and push openstack-runner image
      ansible.builtin.shell: |
        TAG=$(git show-ref --head --hash head)
        EEIMG=quay.rdoproject.org/openstack-k8s-operators/openstack-ansibleee-runner:${TAG}
        make docker-build-ee EEIMG=${EEIMG} EDPM_LOCAL_REPO={{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/edpm-ansible
        make docker-push-ee EEIMG=${EEIMG}
      args:
        chdir: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/openstack-ansibleee-operator"
      register: ee_runner_out

    - name: Show Build and Push openstack-runner image output
      ansible.builtin.debug:
        msg: "{{ ee_runner_out.stdout_lines }}"

    - name: Build and push openstack-ansibleee-operator bundle image
      ansible.builtin.shell: |
        podman pull docker.io/library/golang:1.19
        TAG=$(git show-ref --head --hash head)
        IMAGE_TAG_BASE=quay.rdoproject.org/openstack-k8s-operators/openstack-ansibleee-operator
        make docker-build docker-push IMG=IMG=${IMAGE_TAG_BASE}:${TAG}
        make bundle IMG=${IMAGE_TAG_BASE}:${TAG}
        make bundle-build BUNDLE_IMG=${IMAGE_TAG_BASE}-bundle:${TAG}
        podman push ${IMAGE_TAG_BASE}-bundle:${TAG}
        make catalog-build CATALOG_IMG=${IMAGE_TAG_BASE}-index:${TAG}
        make catalog-push CATALOG_IMG=${IMAGE_TAG_BASE}-index:${TAG}
      args:
        chdir: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/openstack-ansibleee-operator"
      register: runner_out

    - name: Show Build and Push openstack-runner image output
      ansible.builtin.debug:
        msg: "{{ runner_out.stdout_lines }}"

    - name: Get the last commit hash
      ansible.builtin.shell: |
        git show-ref --head --hash head
      args:
        chdir: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/openstack-ansibleee-operator"
      register: ee_image_out

    - name: Get subnode IP
      register: subnode_ip
      ansible.builtin.slurp:
        path: "/etc/nodepool/sub_nodes_private"

    - name: Set the EE_Image name
      ansible.builtin.set_fact:
        ee_image: "quay.rdoproject.org/openstack-k8s-operators/openstack-ansibleee-runner:{{ ee_image_out.stdout }}"
        ee_subnode_ip: "{{ subnode_ip['content'] | b64decode | trim }}"
        cacheable: true

    - name: Set the openstack-ansibleee-operator image
      ansible.builtin.set_fact:
        ansibleee_img: "quay.rdoproject.org/openstack-k8s-operators/openstack-ansibleee-operator-index:{{ ee_image_out.stdout }}"
        ansibleee_repo: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/openstack-ansibleee-operator"
        cacheable: true

    - name: Deploy podified control plane using install_yamls
      vars:
        storage_class: standard
        namespace: openstack
        run_crc_storage: true
        run_openstack_deploy: true
        create_openstack_cr: true
        run_script: true
        run_ansibleee: true
      ansible.builtin.include_role:
        name: use_install_yamls

    - name: Add additional sleep in order to finish the deploy
      ansible.builtin.shell: |
        sleep 200
      args:
        executable: /bin/bash

    - name: Generate secret for external compute
      ansible.builtin.include_role:
        name: add_external_compute_node_secret

    - name: Run EDPM Play
      ansible.builtin.command:
        cmd: make edpm_play
        chdir: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/install_yamls/devsetup"
      environment:
        EDPM_COMPUTE_IP: "{{ ee_subnode_ip }}"
        EDPM_RUNNER_IMG: "{{ ee_image }}"
        EDPM_NETWORK_CONFIG_TEMPLATE: "templates/ci/multinode.j2"

    - name: Get the logs of EDPM Play
      ansible.builtin.shell: |
        sleep 400
        oc logs -f $(oc get pods | grep deploy- | awk {'print $1'} | tail -1)
      args:
        executable: /bin/bash
