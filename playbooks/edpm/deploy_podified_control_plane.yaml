- hosts: controller
  tasks:
    - name: Print the current CRC version
      ansible.builtin.shell: |
        crc version

    - name: Initialize OC Credentials
      ansible.builtin.include_role:
        name: add_crc_creds

    - name: Get git tag for image tagging
      register: edpm_ansible_tag
      ansible.builtin.command:
        cmd: git show-ref --head --hash head
        chdir: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/edpm-ansible"

    - name: Build and push openstack-runner image
      containers.podman.podman_image:
        name: "quay.rdoproject.org/openstack-k8s-operators/openstack-ansibleee-runner:{{ edpm_ansible_tag.stdout|trim }}"
        path: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/edpm-ansible/openstack_ansibleee"
        build:
          volume:
            - "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/edpm-ansible:/var/tmp/edpm-ansible:z"
          extra_args: "--build-arg EDPM_LOCAL_REPO=yes"
        pull: false
        push: true

    - name: Get subnode IP
      register: subnode_ip
      ansible.builtin.slurp:
        path: "/etc/nodepool/sub_nodes_private"

    - name: Get Controller IP
      ansible.builtin.slurp:
        path: /etc/nodepool/node_private
      register: controller_ip

    - name: Set some network related facts
      ansible.builtin.set_fact:
        basic_sshd_allowed_ranges: ["{{ controller_ip['content'] | b64decode | trim }}"]
        zuul_worker_ip: >-
          {%- set ssh_env = ansible_env.SSH_CONNECTION | default('') | ansible.builtin.split -%}
          {{ ssh_env[0::2] }}

    - name: Set some EDPM requested variables
      ansible.builtin.set_fact:
        ee_image: "quay.rdoproject.org/openstack-k8s-operators/openstack-ansibleee-runner:{{ edpm_ansible_tag.stdout|trim }}"
        ee_subnode_ip: "{{ subnode_ip['content'] | b64decode | trim }}"
        edpm_sshd_allowed_ranges: >-
          {%- set full_range = basic_sshd_allowed_ranges + zuul_worker_ip + hostvars['controller']['ansible_all_ipv4_addresses'] %}
          {{ full_range | unique }}
        cacheable: true

    - name: Deploy podified control plane using install_yamls
      vars:
        namespace: openstack
        run_crc_storage: true
        run_openstack_deploy: true
        create_openstack_cr: true
        run_script: true
      ansible.builtin.include_role:
        name: use_install_yamls

    - name: Add additional sleep in order to finish the deploy
      ansible.builtin.shell: |
        sleep 200
      args:
        executable: /bin/bash

    - name: Debug some values
      debug:
        msg: |
          zuul_worker_ip: "{{ zuul_worker_ip }}"
          EDPM_COMPUTE_IP: "{{ ee_subnode_ip }}"
          OPENSTACK_RUNNER_IMG: "{{ ee_image }}"
          EDPM_NETWORK_CONFIG_TEMPLATE: "templates/ci/multinode.j2"
          SSH_KEY_FILE: "{{ ansible_user_dir }}/.ssh/id_rsa"
          EDPM_SSHD_ALLOWED_RANGES: "{{ edpm_sshd_allowed_ranges }}"

    - name: Run EDPM Play
      community.general.make:
        target: edpm_play
        chdir: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/install_yamls/devsetup"
        params:
          EDPM_COMPUTE_IP: "{{ ee_subnode_ip }}"
          OPENSTACK_RUNNER_IMG: "{{ ee_image }}"
          EDPM_NETWORK_CONFIG_TEMPLATE: "templates/ci/multinode.j2"
          SSH_KEY_FILE: "{{ ansible_user_dir }}/.ssh/id_rsa"
          EDPM_SSHD_ALLOWED_RANGES: "{{ edpm_sshd_allowed_ranges }}"

    - name: Get deploy-external-dataplane-compute pod name
      register: deploy_external_pod_name
      ansible.builtin.shell:
        cmd: oc get pods -o name | grep -m1 deploy-external
        executable: /bin/bash
      until: deploy_external_pod_name.rc == 0
      retries: 5
      delay: 5

    # oc wait is experimental. setting timeout to 0 will make it immediate.
    # We'll retry 100 times, with a 20 seconds delay between retries.
    # The "Completed" state we can see in the "oc get pods" is actually "Succeeded"
    # in the json output.
    - name: Wait for deploy-external-dataplane-compute to finish
      register: deploy_external_status
      ansible.builtin.shell:
        cmd: "oc wait --timeout=0 --for=jsonpath='{.status.phase}'=Succeeded {{ deploy_external_pod_name.stdout |trim }}"
      until: deploy_external_status.rc == 0
      retries: 100
      delay: 20

    - name: Get the logs of EDPM Play
      ansible.builtin.shell:
        cmd: "oc logs {{ deploy_external_pod_name.stdout |trim }}"
        executable: /bin/bash
