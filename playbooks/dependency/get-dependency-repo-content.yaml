---
- hosts: all
  vars:
    package_manager_utils: >-
        {% if ansible_distribution_major_version|int >= 8 -%}
        dnf-utils
        {%- else -%}
        yum-utils
        {%- endif -%}
  tasks:
    - name: install yum/dnf-utils
      become: true
      package:
        name: "{{ package_manager_utils }}"
        state: present

    - name: include dependency-related vars
      include_vars: >-
        {{ zuul.executor.work_root }}/{{
              zuul.projects[
                'opendev.org/openstack/tripleo-quickstart'
              ].src_dir
            }}/config/release/dependency_ci/{{ job.dependency|default(dependency) }}/repo_config.yaml

    - name: get repoquery list - test repos
      become: true
      shell: >
        set -o pipefail &&
        repoquery  --repofrompath={{ item.reponame }},{{ item.baseurl }} \
        --repoid={{ item.reponame }} -q -a --nvr --latest-limit 1 \
        | sort | uniq | tee -a  {{ ansible_user_dir }}/test_repoquery_list.log
      with_items: "{{ add_repos }}"
      changed_when: false
      when: add_repos is defined

    - when: dependency_override_repos is defined
      block:
        - name: set default release file used
          set_fact:
            default_release_file_path: >-
              {{ zuul.executor.work_root }}/{{
                  zuul.projects[
                    'opendev.org/openstack/tripleo-quickstart'
                  ].src_dir
                }}/config/release/tripleo-ci/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}/{{ release }}.yml

        - name: set release file used
          set_fact:
            original_repo_file_path:
              "{{ original_repo_file_path | default(default_release_file_path) }}"

        - name: include original repo vars
          include_vars: "{{ original_repo_file_path }}"

        - name: get control repoquery list when control repos defined in release file
          become: true
          shell: |
            export NODEPOOL_CENTOS_MIRROR='http://mirror.centos.org/centos'
            export NODEPOOL_RDO_PROXY=https://trunk.rdoproject.org
            set -o pipefail &&
            repoquery  --repofrompath={{ item.filename|replace('.repo','') }},{{ item.baseurl|default('') }} \
            --repoid={{ item.filename|replace('.repo','') }} -q -a --nvr --latest-limit 1 \
            | sort | uniq | tee -a  {{ ansible_user_dir }}/control_repoquery_list.log
          when: item.filename|replace('.repo','') in dependency_override_repos
          with_items: "{{ repos }}"

        - name: check if control_repoquery_list.log exists
          stat:
            path: "{{ ansible_user_dir }}/control_repoquery_list.log"
          register: control_repoquery_list

        - name: get repoquery list by repoid with dependency_control_repos
          with_items: "{{ dependency_override_repos }}"
          when: >
            (not control_repoquery_list.stat.exists) or
            (control_repoquery_list.stat.size is defined and control_repoquery_list.stat.size == 0)
          become: true
          shell: >
            set -o pipefail &&
            repoquery --repofrompath={{ item }} \
            --repoid={{ item.split(',')[0] }} -q -a --nvr \
            --latest-limit 1 | sort | uniq | tee -a  {{ ansible_user_dir }}/control_repoquery_list.log
