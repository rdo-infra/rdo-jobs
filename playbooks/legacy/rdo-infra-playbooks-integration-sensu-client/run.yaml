- hosts: all
  name: Autoconverted job legacy-rdo-infra-playbooks-integration-sensu-client from
    old job rdo-infra-playbooks-integration-sensu-client-nv
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          echo "[DEBUG]: JJB template name: {template-name}"

          # If this is called in a periodic job, these will not be set
          echo "Use default for ZUUL_BRANCH and ZUUL_REF if needed"
          export ZUUL_BRANCH=${ZUUL_BRANCH:-master}
          export ZUUL_REF=${ZUUL_REF:-None}

          # In the post pipeline ZUUL_REF is master but does not behave as we want
          # So fall back on None
          [ "$ZUUL_REF" = "master" ] && ZUUL_REF=None
          echo "Clean workspace"
          rm -Rf ./*

          echo "Clone $ZUUL_PROJECT"
          # zuul-cloner is installed as /usr/zuul-env/bin/zuul-cloner
          # in upstream images
          export PATH=$PATH:/usr/zuul-env/bin

          # Note (dmsimard): If we are running for a periodic job, there is no
          # incentive in using Zuul cloner because the jobs are not going to
          # potentially depend on things from the zuul context (ex: depends-on)
          # The zuul git namespace (where the job was triggered from) is also
          # wonky for periodic jobs. A periodic pipeline targetted at an
          # upstream project would still end up trying to clone from review.rdo.
          # This should be revisited in Zuul v3 which is supposedly not a
          # problem

          # We can receive reviews from review.openstack.org.
          # Builds that are run as third party for review.o.o are in the Zuul
          # pipelines prefixed by "openstack-".
          GIT_SOURCE="https://review.rdoproject.org/r"
          if [[ "${ZUUL_PIPELINE}" =~ "openstack-" ]]; then
              GIT_SOURCE="https://git.openstack.org"
          fi

          git config --global http.postBuffer 524288000
          git config --global https.postBuffer 524288000

          if [[ "${ZUUL_PIPELINE}" =~ "periodic" ]]; then
          # Note (trown): we need to make sure we clone this to the same
          # location as zuul-cloner will so that manual and periodic jobs
          # can share builders
              git clone --depth=1 $GIT_SOURCE/$ZUUL_PROJECT $ZUUL_PROJECT
          else
              /usr/zuul-env/bin/zuul-cloner -v $GIT_SOURCE $ZUUL_PROJECT
          fi
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          CLONEMAP=$(mktemp)
          function cleanup {
              rm -f $CLONEMAP
          }
          trap cleanup EXIT
          cat > $CLONEMAP << EOF
          clonemap:
            - name: 'rdo-infra/rdo-infra-playbooks'
              dest: 'rdo-infra-playbooks'
            - name: 'centos-opstools/opstools-ansible'
              dest: 'rdo-infra-playbooks/roles/opstools-ansible'
          EOF

          # Zuul clone rdo-infra-playbooks and it is roles at their expected location
          /usr/zuul-env/bin/zuul-cloner -m $CLONEMAP \
            https://review.rdoproject.org/r \
            rdo-infra/rdo-infra-playbooks \
            centos-opstools/opstools-ansible
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          # Need to inherit system-site-packages for libselinux-python and python-yum
          virtualenv --system-site-packages $WORKSPACE/ansible
          source $WORKSPACE/ansible/bin/activate
          pip install ansible==2.4.2.0 ara

          export ara_location=$(python -c "import os,ara; print(os.path.dirname(ara.__file__))")
          export ANSIBLE_CALLBACK_PLUGINS=$ara_location/plugins/callbacks
          export ANSIBLE_ACTION_PLUGINS=$ara_location/plugins/actions
          export ANSIBLE_LIBRARY=$ara_location/plugins/modules
          # ANSIBLE_ASK_VAULT_PASS and ANSIBLE_VAULT_PASSWORD_FILE are mutually
          # exclusive. We default ANSIBLE_ASK_VAULT_PASS to true in ansible.cfg.
          export ANSIBLE_ASK_VAULT_PASS=false

          export ARA_DATABASE="sqlite:///$WORKSPACE/ara.sqlite"

          export ANSIBLE_HOSTS="$WORKSPACE/integration-hosts.yml"
          # This is an empty version of hosts.yml from rdo-infra-playbooks
          # so that we are easily and safely able to run everything against localhost
          cat > $ANSIBLE_HOSTS << EOF
          all:
            vars:
              public_address: 0.0.0.0
            hosts:
              localhost:
                ansible_connection: local
            children:
              standard:
                hosts:
                  localhost:
              review:
                hosts:
                  localhost:
              dlrn:
                hosts:
                  localhost:
              backup:
                hosts:
                  localhost:
              cico:
                hosts:
                  localhost:
              monitoring:
                hosts:
                  localhost:
              logserver:
                hosts:
                  localhost:
              # TODO: Fix this
              # rabbit_hosts is expected by opstools-ansible
              rabbit_hosts:
                children:
                  monitoring
              monitoring_clients:
                children:
                  standard:
                  review:
                  dlrn:
                  cico:
                  monitoring:
          EOF

          pushd rdo-infra-playbooks
            # Use test data for the runs
            if [ -f samples/secrets.vault.yml ]; then
                cat samples/secrets.vault.yml > playbooks/group_vars/all/secrets.vault.yml
            fi
            ansible-playbook -i $ANSIBLE_HOSTS playbooks/sensu-client.yml \
              -e "rdobot_nickname=not_rdobot" \
              -e "sensu_rabbitmq_server=localhost"
            echo "Re-running for idempotency"
            ansible-playbook -i $ANSIBLE_HOSTS playbooks/sensu-client.yml \
              -e "rdobot_nickname=not_rdobot" \
              -e "sensu_rabbitmq_server=localhost"
          popd
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
