- hosts: all
  name: Autoconverted job legacy-rdo-kolla-build-containers from old job gate-rdo-kolla-build-containers
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          echo "[DEBUG]: JJB template name: {template-name}"

          # If this is called in a periodic job, these will not be set
          echo "Use default for ZUUL_BRANCH and ZUUL_REF if needed"
          export ZUUL_BRANCH=${ZUUL_BRANCH:-master}
          export ZUUL_REF=${ZUUL_REF:-None}

          # In the post pipeline ZUUL_REF is master but does not behave as we want
          # So fall back on None
          [ "$ZUUL_REF" = "master" ] && ZUUL_REF=None
          echo "Clean workspace"
          rm -Rf ./*

          echo "Clone $ZUUL_PROJECT"
          # zuul-cloner is installed as /usr/zuul-env/bin/zuul-cloner
          # in upstream images
          export PATH=$PATH:/usr/zuul-env/bin

          # Note (dmsimard): If we are running for a periodic job, there is no
          # incentive in using Zuul cloner because the jobs are not going to
          # potentially depend on things from the zuul context (ex: depends-on)
          # The zuul git namespace (where the job was triggered from) is also
          # wonky for periodic jobs. A periodic pipeline targetted at an
          # upstream project would still end up trying to clone from review.rdo.
          # This should be revisited in Zuul v3 which is supposedly not a
          # problem

          # We can receive reviews from review.openstack.org.
          # Builds that are run as third party for review.o.o are in the Zuul
          # pipelines prefixed by "openstack-".
          GIT_SOURCE="https://review.rdoproject.org/r"
          if [[ "${ZUUL_PIPELINE}" =~ "openstack-" ]]; then
              GIT_SOURCE="https://git.openstack.org"
          fi

          git config --global http.postBuffer 524288000
          git config --global https.postBuffer 524288000

          if [[ "${ZUUL_PIPELINE}" =~ "periodic" ]]; then
          # Note (trown): we need to make sure we clone this to the same
          # location as zuul-cloner will so that manual and periodic jobs
          # can share builders
              git clone --depth=1 $GIT_SOURCE/$ZUUL_PROJECT $ZUUL_PROJECT
          else
              /usr/zuul-env/bin/zuul-cloner -v $GIT_SOURCE $ZUUL_PROJECT
          fi
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -ex
          if [[ "${ZUUL_PROJECT}" != "rdo-infra/ansible-role-rdo-kolla-build" ]]; then
              mkdir -p $WORKSPACE/rdo-infra/ansible-role-rdo-kolla-build
              git clone https://github.com/rdo-infra/ansible-role-rdo-kolla-build rdo-infra/ansible-role-rdo-kolla-build
          fi
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -ex
          mkdir -p $WORKSPACE/roles
          ln -s $WORKSPACE/rdo-infra/ansible-role-rdo-kolla-build $WORKSPACE/roles/kolla-build

          sudo yum -y install libselinux-python
          # Need to inherit system-site-packages for libselinux-python and python-yum
          virtualenv --system-site-packages $WORKSPACE/ansible
          source $WORKSPACE/ansible/bin/activate
          pip install ansible==2.5.2 ara

          export ara_location=$(python -c "import os,ara; print(os.path.dirname(ara.__file__))")
          export ANSIBLE_CALLBACK_PLUGINS=$ara_location/plugins/callbacks
          export ANSIBLE_ACTION_PLUGINS=$ara_location/plugins/actions
          export ANSIBLE_LIBRARY=$ara_location/plugins/modules
          export ANSIBLE_ROLES_PATH=$WORKSPACE/roles

          export ARA_DATABASE="sqlite:///$WORKSPACE/ara.sqlite"

          cat << EOF > ${WORKSPACE}/playbook.yml
          ---
          - name: Build Kolla images
            hosts: localhost
            become: yes
            become_user: root
            roles:
              - kolla-build
          EOF
          ansible-playbook -i localhost $WORKSPACE/playbook.yml --tags "setup,build"
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
