- hosts: all
  name: Autoconverted job legacy-centos-sinkhole-functional-nv from old job centos-sinkhole-functional-nv
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          echo "[DEBUG]: JJB template name: {template-name}"

          # If this is called in a periodic job, these will not be set
          echo "Use default for ZUUL_BRANCH and ZUUL_REF if needed"
          export ZUUL_BRANCH=${ZUUL_BRANCH:-master}
          export ZUUL_REF=${ZUUL_REF:-None}

          # In the post pipeline ZUUL_REF is master but does not behave as we want
          # So fall back on None
          [ "$ZUUL_REF" = "master" ] && ZUUL_REF=None
          echo "Clean workspace"
          rm -Rf ./*

          echo "Clone $ZUUL_PROJECT"
          # zuul-cloner is installed as /usr/zuul-env/bin/zuul-cloner
          # in upstream images
          export PATH=$PATH:/usr/zuul-env/bin

          # Note (dmsimard): If we are running for a periodic job, there is no
          # incentive in using Zuul cloner because the jobs are not going to
          # potentially depend on things from the zuul context (ex: depends-on)
          # The zuul git namespace (where the job was triggered from) is also
          # wonky for periodic jobs. A periodic pipeline targetted at an
          # upstream project would still end up trying to clone from review.rdo.
          # This should be revisited in Zuul v3 which is supposedly not a
          # problem

          # We can receive reviews from review.openstack.org.
          # Builds that are run as third party for review.o.o are in the Zuul
          # pipelines prefixed by "openstack-".
          GIT_SOURCE="https://review.rdoproject.org/r"
          if [[ "${ZUUL_PIPELINE}" =~ "openstack-" ]]; then
              GIT_SOURCE="https://git.openstack.org"
          fi

          git config --global http.postBuffer 524288000
          git config --global https.postBuffer 524288000

          if [[ "${ZUUL_PIPELINE}" =~ "periodic" ]]; then
          # Note (trown): we need to make sure we clone this to the same
          # location as zuul-cloner will so that manual and periodic jobs
          # can share builders
              git clone --depth=1 $GIT_SOURCE/$ZUUL_PROJECT $ZUUL_PROJECT
          else
              /usr/zuul-env/bin/zuul-cloner -v $GIT_SOURCE $ZUUL_PROJECT
          fi
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          if [ $(grep -c ^CentOS /etc/system-release) -eq 0 ]; then
              PYTHON_VERSION='python3'
              sudo dnf remove -y yum-utils
              sudo dnf install -y createrepo_c dnf-utils fedora-packager
          else
              # For CentOS we need to use yum4 repo to use dnf libraries.
              PYTHON_VERSION='python2'
              sudo yum -y install centos-release-yum4
              sudo yum -y install yum4
              sudo yum4 -y install dnf-plugins-core
              sudo yum -y install createrepo_c centos-packager
          fi
          virtualenv -p $PYTHON_VERSION --system-site-packages .venv
          source .venv/bin/activate
          pushd $ZUUL_PROJECT
          pip install .
          if [ -d functional_tests ]; then
              pushd functional_tests
              for i in $(ls -d scenario*); do
                  pushd $i
                  OUTPUT_DIR=$(grep output_dir fedora_config | cut -d= -f2 | tr -d '[:space:]')
                  mkdir -p $OUTPUT_DIR
                  if [ -f comps*xml ];then
                      cp comps*xml $OUTPUT_DIR
                  fi
                  echo "INFO: Running synchronization using sinkhole"
                  sinkhole --config fedora_config config_file
                  echo "INFO: Running repoclosure"
                  popd
              done
              popd
          fi
          popd
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
