- hosts: primary
  name: legacy-rdoinfo-tripleo-rocky-testing-centos-7-multinode-1ctlr-featureset030
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          echo "[DEBUG]: JJB template name: {template-name}"

          # If this is called in a periodic job, these will not be set
          echo "Use default for ZUUL_BRANCH and ZUUL_REF if needed"
          export ZUUL_BRANCH=${ZUUL_BRANCH:-master}
          export ZUUL_REF=${ZUUL_REF:-None}

          # In the post pipeline ZUUL_REF is master but does not behave as we want
          # So fall back on None
          [ "$ZUUL_REF" = "master" ] && ZUUL_REF=None
          echo "Clean workspace"
          rm -Rf ./*

          echo "Clone $ZUUL_PROJECT"
          # zuul-cloner is installed as /usr/zuul-env/bin/zuul-cloner
          # in upstream images
          export PATH=$PATH:/usr/zuul-env/bin

          # Note (dmsimard): If we are running for a periodic job, there is no
          # incentive in using Zuul cloner because the jobs are not going to
          # potentially depend on things from the zuul context (ex: depends-on)
          # The zuul git namespace (where the job was triggered from) is also
          # wonky for periodic jobs. A periodic pipeline targetted at an
          # upstream project would still end up trying to clone from review.rdo.
          # This should be revisited in Zuul v3 which is supposedly not a
          # problem

          # We can receive reviews from review.openstack.org.
          # Builds that are run as third party for review.o.o are in the Zuul
          # pipelines prefixed by "openstack-".
          GIT_SOURCE="https://review.rdoproject.org/r"
          if [[ "${ZUUL_PIPELINE}" =~ "openstack-" ]]; then
              GIT_SOURCE="https://git.openstack.org"
          fi

          git config --global http.postBuffer 524288000
          git config --global https.postBuffer 524288000

          if [[ "${ZUUL_PIPELINE}" =~ "periodic" ]]; then
          # Note (trown): we need to make sure we clone this to the same
          # location as zuul-cloner will so that manual and periodic jobs
          # can share builders
              git clone --depth=1 $GIT_SOURCE/$ZUUL_PROJECT $ZUUL_PROJECT
          else
              /usr/zuul-env/bin/zuul-cloner -v $GIT_SOURCE $ZUUL_PROJECT
          fi
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack-infra/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              git://git.openstack.org \
              openstack-infra/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          cat <<EOF | sudo tee /etc/nodepool/provider
          NODEPOOL_PROVIDER="{{ nodepool.provider }}"
          NODEPOOL_CLOUD="{{ nodepool.cloud }}"
          NODEPOOL_REGION="{{ nodepool.region }}"
          NODEPOOL_AZ="{{ nodepool.az }}"
          EOF
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          # This builder, when run from a child job of validate-buildsys-tags
          # configures the temporary repositories created by it
          # This allows to install the packages in that repository and test
          # them.
          set +e -x
          # This job requires variables $RELEASE and $PHASE to be defined.

          PHASE='testing'
          RELEASE='rocky'

          REQUIRED=0
          MASTER_RELEASE=stein
          CREPOS_FILE=changed_repos.txt

          if [ -z "$RELEASE" -o -z "$PHASE" ]; then
              echo "ERROR in job definition"
              exit 1
          fi

          if [ $RELEASE = "master" ]; then
              O_RELEASE=$MASTER_RELEASE
          else
              O_RELEASE="$RELEASE"
          fi

          if [[ ( "$RELEASE" == "ocata" ) || ("$RELEASE" == "pike" ) ]];then
              C_RELEASE=common
          else
              C_RELEASE=""
          fi

          # Re-construct the expected repository URL
          ZUUL_REF=$(echo $ZUUL_REF |cut -f4 -d /)
          job="validate-buildsys-tags"
          LOG_PATH="$BASE_LOG_PATH/$ZUUL_PIPELINE/$job/$ZUUL_REF"
          logs="https://logs.rdoproject.org/$LOG_PATH/"

          # NOTE(pabelanger): Override logs for zuulv3 jobs.
          if [[ -d /home/zuul ]]; then
              logs={{ buildset_artifacts_url }}
          fi

          # If we could not find a working repository, give up
          curl -o $CREPOS_FILE -sf "$logs/repos/changed_repos.txt" || exit 1

          for tag in $O_RELEASE $C_RELEASE
          do
              if grep -q -E "$tag-$PHASE" $CREPOS_FILE; then
                  REQUIRED=1
              fi
          done

          if [ $REQUIRED -eq 0 ];then
              echo "INFO: this test is not required"| tee not_required
              exit 0
          fi


          COMMON_TESTING_TAG="cloud7-openstack-common-testing"
          COMMON_RELEASE_TAG="cloud7-openstack-common-release"
          COMMON_TESTING=$(grep -c $COMMON_TESTING_TAG $CREPOS_FILE)
          COMMON_RELEASE=$(grep -c $COMMON_RELEASE_TAG $CREPOS_FILE)

          function create_config(){
              echo "artg_skipped_projects:"
              echo "  - rdoinfo"
              echo "release: $RELEASE"
              if [ $STABLE_REPOSITORIES != false ]; then
                  echo "run_tempest: false"
                  echo "test_ping: true"
              fi
              echo "dlrn_hash_tag: current-tripleo"
              echo "docker_registry_namespace: tripleorocky"
              echo "docker_image_tag: current-tripleo"
              echo "overcloud_image_url: http://images.rdoproject.org/$RELEASE/rdo_trunk/current-tripleo/overcloud-full.tar"
              echo "ipa_image_url: http://images.rdoproject.org/$RELEASE/rdo_trunk/current-tripleo/ironic-python-agent.tar"
              echo "images:"
              echo "  - name: overcloud-full"
              echo "    url: http://images.rdoproject.org/$RELEASE/rdo_trunk/current-tripleo/overcloud-full.tar"
              echo "    type: tar"
              echo "  - name: ipa_images"
              echo "    url: http://images.rdoproject.org/$RELEASE/rdo_trunk/current-tripleo/ironic-python-agent.tar"
              echo "    type: tar"
              echo "repo_cmd_before: |"
              echo "  sudo yum remove -y rdo-release centos-release-openstack-* centos-release-ceph-* || true;"
              echo "  sudo rpm -e epel-release || true;"
              echo "  sudo rm -rf /etc/yum.repos.d/delorean*;"
              echo "  sudo rm -rf /etc/yum.repos.d/*.rpmsave;"
              echo "  sudo yum clean all"
              echo "repos:"
              if [ $STABLE_REPOSITORIES != false ]; then
                  echo "  - type: package"
                  echo "    pkg_name: centos-release-openstack-$O_RELEASE"
                  echo "    custom_cmd: 'sudo yum install -y --enablerepo=extras'"
              else
                  echo "  - type: package"
                  echo "    pkg_name: centos-release-ceph-luminous"
                  echo "    custom_cmd: 'sudo yum install -y --enablerepo=extras'"
              fi
              INDEX=0
              for repo in $REPOS_URL
              do
                  echo "  - type: file"
                  echo "    filename: delorean-$INDEX.repo"
                  echo "    down_url: $repo"
                  ((INDEX++))
              done
              echo "  - type: generic"
              echo "    reponame: centos-opstools"
              echo "    filename: centos-opstools.repo"
              echo "    baseurl: http://mirror.centos.org/centos/7/opstools/x86_64/"
              echo "  - type: generic"
              echo "    reponame: quickstart-centos-base"
              echo "    filename: quickstart-centos-base.repo"
              echo "    baseurl: http://mirror.regionone.rdo-cloud.rdoproject.org/centos/7/os/x86_64/"
              if [ ! -z $delorean_current_url ]; then
                  echo "  - type: generic"
                  echo "    reponame: delorean-current"
                  echo "    filename: delorean-current.repo"
                  echo "    baseurl: ${delorean_current_url}"
                  echo "    priority: 1"
                  echo "    includepkgs:"
                  echo "      - ansible-role-container-registry"
                  echo "      - ansible-role-tripleo*"
                  echo "      - ansible-tripleo-ipsec"
                  echo "      - instack"
                  echo "      - instack-undercloud"
                  echo "      - openstack-tripleo-*"
                  echo "      - os-apply-config"
                  echo "      - os-collect-config"
                  echo "      - os-net-config"
                  echo "      - os-refresh-config"
                  echo "      - puppet-*"
                  echo "      - python*-tripleo*"
                  echo "      - python*-paunch*"
              fi
              echo "repo_cmd_after: |"
              echo "  sudo yum install -y yum-plugin-priorities;"
              echo "  sudo yum-config-manager --save --setopt centos-ceph-jewel.gpgcheck=0"
              echo '  {% if not enable_opstools_repo|default(false)|bool %}sudo yum-config-manager --save --setopt centos-opstools.enable=0;'
              echo '  {%endif %}'
              if [ $STABLE_REPOSITORIES != false ]; then
                  echo "  sudo yum-config-manager --save --setopt centos-qemu-ev.gpgcheck=0"
                  echo "  sudo yum-config-manager --save --setopt centos-openstack-$O_RELEASE.gpgcheck=0"
                  echo "  sudo yum-config-manager --disable rdo-trunk-$O_RELEASE-tested"
                  if [ $TESTING_REPOSITORY = true ]; then
                      echo "  sudo yum-config-manager --disable centos-openstack-$O_RELEASE"
                      echo "  sudo yum-config-manager --enable centos-openstack-$O_RELEASE-test"
                  fi
              fi
              echo "  sudo yum clean all;"
              echo "  sudo yum repolist;"
              echo "  sudo yum update -y"
              if [ $STABLE_REPOSITORIES != false ]; then
                  echo "overcloud_repo_paths:"
                  echo "  - \"\$(ls /etc/yum.repos.d/CentOS-OpenStack-$O_RELEASE*)\""
                  echo "  - \"\$(ls /etc/yum.repos.d/CentOS-QEMU*)\""
                  echo "  - \"\$(ls /etc/yum.repos.d/CentOS-Ceph-*)\""
                  INDEX=0
                  for repo in $REPOS_URL
                  do
                      echo "  - \"/etc/yum.repos.d/delorean-$INDEX.repo\""
                      ((INDEX++))
                  done
              fi
              echo "undercloud_rpm_dependencies: >-"
              echo "  python-tripleoclient"
              echo "  ceph-ansible"
              if [ $RELEASE = "rocky" ]; then
                  echo "update_containers: true"
                  echo "gating_repo_name: temp-*"
              fi
          }


          case $PHASE in
          testing)
              REPOS_URL="http://trunk.rdoproject.org/centos7-rocky/current-passed-ci/delorean.repo http://trunk.rdoproject.org/centos7-rocky/delorean-deps.repo"
              STABLE_REPOSITORIES=false
              TESTING_REPOSITORY=false
              if [ $(grep -c $O_RELEASE-$PHASE $CREPOS_FILE) -ne 0 ]; then
                  REPO="cloud7-openstack-$O_RELEASE-$PHASE"
                  REPOS_URL="$REPOS_URL $logs/repos/$REPO/temp-$REPO.repo"
              fi
              delorean_current_url=`curl --silent https://trunk.rdoproject.org/centos7-rocky/current/delorean.repo -S | grep baseurl | cut -d= -f2`
              create_config | tee -a tripleo.yml
          ;;
          release)
              REPOS_URL="http://trunk.rdoproject.org/centos7-rocky/current-passed-ci/delorean.repo http://trunk.rdoproject.org/centos7-rocky/delorean-deps.repo"
              STABLE_REPOSITORIES=false
              TESTING_REPOSITORY=false
              if [ $(grep -c $O_RELEASE-$PHASE $CREPOS_FILE) -ne 0 ]; then
                  REPO="cloud7-openstack-$O_RELEASE-$PHASE"
                  REPOS_URL="$REPOS_URL $logs/repos/$REPO/temp-$REPO.repo"
              else
                  REPOS_URL="$REPOS_URL"
              fi
              delorean_current_url=`curl --silent https://trunk.rdoproject.org/centos7-rocky/current/delorean.repo -S | grep baseurl | cut -d= -f2`
              create_config | tee -a tripleo.yml
          ;;
          esac
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          sudo mkdir -p /opt/stack/new
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack/tripleo-quickstart
              dest: /opt/stack/new/tripleo-quickstart
          EOF
          sudo /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              git://git.openstack.org \
              openstack/tripleo-quickstart
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          # Create directory for used by rdo-rsync-logs
          mkdir -p $WORKSPACE/logs
          # If this configuration is not required, exit early
          if [ -f $WORKSPACE/not_required ]; then
              echo "Job for rocky-testing not required"
              exit 0
          fi

          export TOCI_JOBTYPE=gate-multinode-1ctlr-featureset030
          export STABLE_RELEASE=rocky

          sudo rm -f /opt/stack/new/tripleo-quickstart/config/release/tripleo-ci/rocky.yml
          sudo mv tripleo.yml /opt/stack/new/tripleo-quickstart/config/release/tripleo-ci/CentOS-7/rocky.yml

          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=0
          export DEVSTACK_GATE_EXERCISES=0
          export DEVSTACK_GATE_HORIZON=1

          export PROJECTS="openstack/tripleo-quickstart-extras $PROJECTS"
          export PROJECTS="openstack/tripleo-upgrade $PROJECTS"

          sudo chown -hR $(whoami) /opt/git
          function gate_hook {
              bash -xe /opt/stack/new/tripleo-ci/toci_gate_test.sh
          }
          export -f gate_hook
          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
