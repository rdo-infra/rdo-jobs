- hosts: controller
  gather_facts: false
  tasks:
    - name: Collect pod logs
      ansible.builtin.shell: |
        source ~/.bashrc
        mkdir -p logs/controller/pod
        pushd logs/controller
        ip a > network.txt
        ip ro ls >> network.txt
        oc project openstack
        oc get pods > all_pods.txt
        all_pods=$(oc get pods -o name)
        for pod in $all_pods; do
          echo $pod
          oc logs $pod > ${pod}-logs.txt
          oc get -o yaml $pod > ${pod}.yaml
          oc describe $pod > ${pod}-describe.txt
        done
        test -d /home/zuul-worker/src/github.com/openstack-k8s-operators/install_yamls/out && \
          rsync -r /home/zuul-worker/src/github.com/openstack-k8s-operators/install_yamls/out ./install_yamls_out
        popd
      args:
        chdir: "{{ ansible_user_dir }}"
      changed_when: true
      failed_when: false

    - name: create logs/data_plane_adoption directory
      ansible.builtin.file:
        path: "{{ ansible_user_dir  }}/logs/data_plane_adoption"
        state: directory

    - name: collect data-plane-adoption test input files from rdo-jobs directory
      ansible.builtin.copy:
        src: "/home/zuul/src/review.rdoproject.org/rdo-jobs/playbooks/data_plane_adoption/{{ item }}"
        dest: "{{ ansible_user_dir }}/logs/data_plane_adoption"
      loop:
        - secrets.yaml
        - vars.yaml
        - ansible.cfg
      failed_when: false

    - name: collect data-plane-adoption test logs from dpa directory
      ansible.builtin.copy:
        src: "/home/zuul/src/github.com/openstack-k8s-operators/data-plane-adoption/tests/{{ item }}"
        dest: "{{ ansible_user_dir }}/logs/data_plane_adoption"
      with_fileglob:
        - "logs/test_minimal_out_*"
        - "inventory.sample-crc-vagrant.yaml"
      failed_when: false

    - name: Copy ci-framework-data directory into {{ ansible_user_dir }}/logs
      failed_when: false
      ansible.builtin.copy:
        src: "{{ ansible_user_dir }}/ci-framework-data"
        dest: "{{ ansible_user_dir }}/logs/"
        remote_src: true

    - name: Copy pod debug files from {{ ansible_user_dir }}/logs on node
      failed_when: false
      synchronize:
        src: '{{ ansible_user_dir }}/logs/'
        dest: '{{ zuul.executor.log_root }}'
        mode: pull
        copy_links: true
        verify_host: true
        rsync_opts:
          - --include=/etc/**
          - --include=/conf/**
          - --include=/logs/**
          - --include=*/
          - --prune-empty-dirs
