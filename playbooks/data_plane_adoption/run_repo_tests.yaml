- hosts: controller
  gather_facts: false
  vars:
    dpa_dir: "/home/zuul/src/github.com/openstack-k8s-operators/data-plane-adoption"
    rdo_dir: "/home/zuul/src/review.rdoproject.org/rdo-jobs/playbooks/data_plane_adoption"
    standalone_ip: "192.168.122.100"
    standalone_vm_ssh_key: "/home/zuul/src/github.com/openstack-k8s-operators/install_yamls/out/edpm/ansibleee-ssh-key-id_rsa"
  tasks:
    - name: Add standalone vm to in-memory inventory
      ansible.builtin.add_host:
        groups:
          - standalone
        name: nested_vm
        ansible_host: "{{ standalone_ip }}"
        ansible_user: root
        ansible_ssh_private_key_file: "{{ standalone_vm_ssh_key }}"

    - name: Wait for standalone vm to be available
      ansible.builtin.wait_for:
        port: 22
        host: "{{ standalone_ip }}"
        delay: 10
        timeout: 300
      vars:
        ansible_user: root
        ansible_ssh_private_key_file: "{{ standalone_vm_ssh_key }}"

    - name: Place standalone_ip into vars.yaml
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/vars.yaml"
        regexp: '^external_mariadb_ip:'
        value: "external_mariadb_ip: {{ standalone_ip }}"

    - name: Slurp the tripleo passwords from standalone
      delegate_to: nested_vm
      ansible.builtin.slurp:
        path: /root/tripleo-standalone-passwords.yaml
      register: tripleo_passwords

    - name: Place mariadb password into secrets.yaml
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/secrets.yaml"
        regexp: 'external_db_root_password:'
        value: "external_db_root_password: {{ tripleo_passwords['content'] | b64decode | regex_search('MysqlRootPassword:.(.+)', '\\1') | first }}"

    - name: Place glance password into secrets.yaml
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/secrets.yaml"
        regexp: 'glance_password:'
        value: "glance_password: {{ tripleo_passwords['content'] | b64decode | regex_search('GlancePassword:.(.+)', '\\1') | first }}"

    - name: Place placement password into secrets.yaml
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/secrets.yaml"
        regexp: 'placement_password:'
        value: "placement_password: {{ tripleo_passwords['content'] | b64decode | regex_search('PlacementPassword:.(.+)', '\\1') | first }}"

    - name: Place cinder password into secrets.yaml
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/secrets.yaml"
        regexp: 'cinder_password:'
        value: "cinder_password: {{ tripleo_passwords['content'] | b64decode | regex_search('CinderPassword:.(.+)', '\\1') | first }}"

    # TODO(marios) fixme also affects haproxy may need another/better way
    - name: Setup IPTables forwarding on standalone for mariadb client access
      ansible.builtin.command: sudo iptables -t nat -A PREROUTING -p tcp --dport 3306 -j DNAT --to-destination 172.17.0.100:3306
      become: true
      delegate_to: nested_vm

    - name: Slurp crc public key for ssh access to standalone
      ansible.builtin.slurp:
        path: /home/zuul/.ssh/id_rsa.pub
      register: crc_ssh_key

    - name: Place crc public key to standalone authorized_keys
      delegate_to: nested_vm
      ansible.builtin.lineinfile:
        path: "/root/.ssh/authorized_keys"
        insertafter: "EOF"
        value: "{{ crc_ssh_key['content'] | b64decode | trim }}"

    - name: Set standalone login var controller1_ssh in secrets.yaml
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/secrets.yaml"
        regexp: 'controller1_ssh:'
        value: "controller1_ssh: ssh -i /home/zuul/src/github.com/openstack-k8s-operators/install_yamls/out/edpm/ansibleee-ssh-key-id_rsa root@{{ standalone_ip }}"

    - name: pip install openstackclient for keystone adoption on crc
      become: true
      ansible.builtin.pip:
        name: python-openstackclient
        executable: pip3

    - name: grab the crc VM IP address
      ansible.builtin.command: crc ip
      register: crc_ip

    - name: Set etc hosts entry for keystone glance placement cinder to crc VM IP
      become: true
      ansible.builtin.lineinfile:
        path: "/etc/hosts"
        insertafter: "EOF"
        value: "{{ crc_ip.stdout }} keystone-public-openstack.apps-crc.testing glance-public-openstack.apps-crc.testing placement-public-openstack.apps-crc.testing cinder-public-openstack.apps-crc.testing"

    - name: Run data-plane-adoption tests
      community.general.make:
        chdir: "{{ dpa_dir }}"
        target: test-minimal
        params:
          TEST_CONFIG: "{{ rdo_dir }}/ansible.cfg"
          TEST_SECRETS: "{{ rdo_dir}}/secrets.yaml"
          TEST_VARS: "{{ rdo_dir }}/vars.yaml"
          TEST_INVENTORY: "tests/inventory.sample-crc-vagrant.yaml"
      register: make_res
      failed_when: '"failed=0" not in "{{ make_res.stdout_lines[-1:] }}"'
