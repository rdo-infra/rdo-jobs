- hosts: all
  gather_facts: false
  vars:
    framework_dir: "/home/zuul/src/github.com/openstack-k8s-operators/ci-framework"
    zuul_url: "https://review.rdoproject.org/zuul/api"
    test_file: "{{ ansible_user_dir }}/ci-framework-data/tests/test_operator/tempest-tests/manual_results.xml"
  vars_files:
    - "{{ playbook_dir }}/files/polarion_testcases.yaml"
  tasks:
    - name: Prepare non-tempest testcase file and call polarion reporting role
      when:
        - cifmw_polarion_report_results | default(false)
      block:
        - name: Delete old testcase file if exists
          ansible.builtin.file:
            path: "{{ test_file }}"
            state: absent
          ignore_errors: true

        - name: Ensure test result XML file exists
          ansible.builtin.copy:
            dest: "{{ test_file }}"
            content: |
              <testsuite>
              </testsuite>

        - name: Get the adoption log file name
          ansible.builtin.shell: |
            ls -t {{ dpa_dir }}/tests/logs/*.log
          register: adoption_logfile

        - name: Fetch the result of testcase from adoption logfile and update in test result file
          ansible.builtin.include_tasks: "{{ playbook_dir }}/prepare_adoption_testcase_file.yaml"
          loop: "{{ testcases }}"

        - name: Create cifmw polarion parameters file
          ansible.builtin.template:
            src: "{{ playbook_dir }}/files/ci_framework_polarion_params.yaml.j2"
            dest: "{{ cifmw_polarion_params_file | default('/home/zuul/polarion_params.yaml') }}"

        # Make an API call to the Zuul endpoint to fetch build data
        - name: Call the API to fetch build data
          ansible.builtin.uri:
            url: "{{ zuul_url }}/builds?uuid={{ zuul.build }}"
            return_content: true
          register: build_data
          failed_when: build_data.status != 200
          when: zuul.build | length > 0

        # Extracts the start_time from the API response and sets it as a fact
        - name: Set the start_time for the build
          ansible.builtin.set_fact:
            build_start_time: "{{ build_data.json[0]['start_time'] | default('') }}"

        # Display the polarion test run name
        - name: Test run name
          ansible.builtin.debug:
            msg: "Test run name: {{ zuul.job }}-{{ build_start_time }}"

        # Configure Polarion parameters
        - name: Set test run title for polarion reporting
          ansible.builtin.set_fact:
            cifmw_polarion_jump_extra_vars: >-
               {{ cifmw_polarion_jump_extra_vars | default('') }}
               --project-id RHOSO
               --testrun-title {{ zuul.job }}-{{ build_start_time }}
               --testrun-status finished

        # Set the testrun template id
        - name: Set test run template id
          ansible.builtin.set_fact:
            cifmw_polarion_jump_extra_vars: >-
               {{ cifmw_polarion_jump_extra_vars | default('') }}
               --testrun-template-id {{ cifmw_polarion_testrun_template_id }}
          when: cifmw_polarion_testrun_template_id is defined

        # Include Polarion role
        - name: Include Polarion role
          ansible.builtin.include_role:
            name: "polarion"
