- hosts: standalone
  vars:
    cifmw_installyamls_repos: "github.com/openstack-k8s-operators/install_yamls"
    ctlplane_ip: "{{ standalone_ip }}"
    ctlplane_cidr: 24
    ctlplane_vip: 192.168.122.99
    gateway_ip: "{{ standalone_gateway }}"
    dns_server: "{{ standalone_gateway }}"
    interface_mtu: 1500
    ip_address_suffix: 100
    os_net_config_iface: nic2
    standalone_vm: false
    additional_networks: []
  tasks:
    - name: Setup repos and install deps for running os-net-config
      become: true
      ansible.builtin.shell: |
        subscription-manager repos --enable openstack-17.1-for-rhel-9-x86_64-rpms
        subscription-manager repos --enable fast-datapath-for-rhel-9-x86_64-rpms
        dnf install -y openvswitch os-net-config
        mkdir -p /etc/os-net-config/

    - name: Template out the os-net-config config from install_yamls src checkout
      become: true
      ansible.builtin.template:
        src: "{{ zuul.executor.src_root }}/{{ cifmw_installyamls_repos }}/devsetup/standalone/net_config.j2"
        dest: /etc/os-net-config/standalone_config.yaml

    - name: Rename ci-framework created Network Manager scripts and delete connections
      become: true
      ansible.builtin.shell: |
        for i in " " "-20" "-21" "-22"; do nmcli connection delete ci-private-network$i; done
      args:
        chdir: /etc/NetworkManager/system-connections/

    - name: Stop NetworkManager
      become: true
      ansible.builtin.systemd:
        name: NetworkManager
        state: stopped

    - name: Start network and openvswitch services
      become: true
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
      loop:
        - network
        - openvswitch

    - name: Run os-net-config to create standalone networking
      become: true
      ansible.builtin.shell: |
        os-net-config -c /etc/os-net-config/standalone_config.yaml

    - name: Get debug info about network
      failed_when: false
      ansible.builtin.shell: |
        ip a
        ping -c 2 -W 2 192.168.122.10
        ping -c 2 -W 2 192.168.122.11
      register: standalone_network_ip_info

    - name: Debug standalone network status
      ansible.builtin.debug:
        var: standalone_network_ip_info
