- hosts: standalone,undercloud
  vars:
    cifmw_installyamls_repos: "github.com/openstack-k8s-operators/install_yamls"
    ctlplane_ip: "{{ standalone_ip }}"
    ctlplane_cidr: 24
    ctlplane_vip: 192.168.122.99
    gateway_ip: "{{ standalone_gateway }}"
    dns_server: "{{ standalone_gateway }}"
    interface_mtu: 1500
    ip_address_suffix: 100
    os_net_config_iface: nic2
    standalone_vm: false
    additional_networks: []
  tasks:
    - name: Setup repos and install deps for running os-net-config
      become: true
      ansible.builtin.shell: |
        subscription-manager repos --enable openstack-17.1-for-rhel-9-x86_64-rpms
        subscription-manager repos --enable fast-datapath-for-rhel-9-x86_64-rpms
        dnf install -y openvswitch os-net-config
        mkdir -p /etc/os-net-config/

    - name: Template out the os-net-config config from install_yamls src checkout
      become: true
      ansible.builtin.template:
        src: "{{ zuul.executor.src_root }}/{{ cifmw_installyamls_repos }}/devsetup/standalone/net_config.j2"
        dest: /etc/os-net-config/standalone_config.yaml

    - name: Remove ci-framework created Network Manager connections
      failed_when: false
      become: true
      community.general.nmcli:
        conn_name: "ci-private-network{{ item }}"
        state: absent
      loop:
        - " "
        - "-20"
        - "-21"
        - "-22"

    - name: Start network and openvswitch services
      become: true
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
      loop:
        - network
        - openvswitch

    - name: Run os-net-config to create standalone networking
      become: true
      ansible.builtin.shell: |
        os-net-config -c /etc/os-net-config/standalone_config.yaml

    - name: Sanity check standalone can ping crc and controller nodes on 192.168.122.0/24
      ansible.builtin.shell: |
        ip a
        ping -c 2 -W 2 192.168.122.10
        ping -c 2 -W 2 192.168.122.11

    - name: Slurp controller public key for ssh access to standalone
      delegate_to: controller
      ansible.builtin.slurp:
        path: /home/zuul/.ssh/id_rsa.pub
      register: controller_ssh_pub

    - name: Install ansible.posix collection from ansible-galaxy
      become: true
      ansible.builtin.shell: |
        sudo dnf install -y ansible-core
        ansible-galaxy collection install ansible.posix

    - name: Place controller public key in authorized_keys for zuul and root
      become: "{{ item == 'root' }}"
      ansible.posix.authorized_key:
        user: "{{ item }}"
        key: "{{ controller_ssh_pub['content'] | b64decode | trim }}"
      loop:
        - zuul
        - root
