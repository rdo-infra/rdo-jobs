- name: Prepare for tripleo deployment
  vars: &ooo_vars
    dpa_dir: "{{ dpa_dir_override | default('/home/zuul/src/github.com/openstack-k8s-operators/data-plane-adoption') }}"
    rdo_dir: "/home/zuul/src/review.rdoproject.org/rdo-jobs/playbooks/data_plane_adoption"
    framework_dir: "/home/zuul/src/github.com/openstack-k8s-operators/ci-framework"
    cifmw_datadir: "/home/zuul/ci-framework-data"
    tripleo_passwords_file: "{{ tripleo_passwords | default('/home/zuul/overcloud-passwords.yaml') }}"
    source_mariadb_ips:
      - 172.17.0.103
      - 172.17.0.104
      - 172.17.0.105
    source_ovndb_ip: 172.17.0.103
  ansible.builtin.import_playbook: deploy_tripleo_prepare.yaml

- hosts: controller
  gather_facts: false
  vars: *ooo_vars
  tasks:
    - name: Fetch controller hostnames to set source_galera_members var
      delegate_to: "{{ item }}"
      ansible.builtin.slurp:
        path: /home/zuul/ansible_hostname
      register: controller_hostnames
      loop: "{{ groups['tripleo_controllers'] }}"

    - name: Fetch compute hostnames to set edpm_node_hostname vars
      delegate_to: "{{ item }}"
      ansible.builtin.slurp:
        path: /home/zuul/ansible_hostname
      register: compute_hostnames
      loop: "{{ groups['tripleo_computes'] }}"

    - name: Fetch networker hostnames to set edpm_node_hostname vars
      delegate_to: "{{ item }}"
      ansible.builtin.slurp:
        path: /home/zuul/ansible_hostname
      register: networker_hostnames
      loop: "{{ groups['tripleo_networkers'] | default([]) }}"

    - name: Set compute hostname facts to prevent repetition
      ansible.builtin.set_fact:
        compute{{ item }}_hostname: "{{ compute_hostnames.results[item | int]['content'] | b64decode | trim }}.{{ cloud_domain | default('localdomain') }}"
      with_sequence: start=0 end="{{ (groups['tripleo_computes'] | length - 1) }}"

    - name: Set networker hostname facts to prevent repetition
      when: "'tripleo_networkers' in groups"
      ansible.builtin.set_fact:
        networker{{ item }}_hostname: "{{ networker_hostnames.results[item | int]['content'] | b64decode | trim }}.{{ cloud_domain | default('localdomain') }}"
      with_sequence: start=0 end="{{ (groups['tripleo_networkers'] | length - 1) }}"

    - name: Set controller hostname facts to prevent repetition
      ansible.builtin.set_fact:
        controller{{ item }}_hostname: "{{ controller_hostnames.results[item | int]['content'] | b64decode | trim }}.{{ cloud_domain | default('localdomain') }}"
      with_sequence: start=0 end="{{ (groups['tripleo_controllers'] | length - 1) }}"

    - name: Set ipa_ssh var in secrets.yaml
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/secrets.yaml"
        regexp: 'ipa_ssh:'
        value: "ipa_ssh: ssh -i {{ standalone_private_key | default('/home/zuul/src/github.com/openstack-k8s-operators/install_yamls/out/edpm/ansibleee-ssh-key-id_rsa') }} root@{{ standalone_ip }} podman exec -ti freeipa-server-container"

    - name: Set controller ssh login vars controllerX_ssh in secrets.yaml
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/secrets.yaml"
        regexp: "controller{{ item.ctrl }}_ssh:"
        value: "controller{{ item.ctrl }}_ssh: ssh -o StrictHostKeyChecking=accept-new -i {{ standalone_private_key | default('/home/zuul/src/github.com/openstack-k8s-operators/install_yamls/out/edpm/ansibleee-ssh-key-id_rsa') }} root@192.168.122.10{{ item.suffix }}"
      loop:
        - {ctrl: "1", suffix: "3"}
        - {ctrl: "2", suffix: "4"}
        - {ctrl: "3", suffix: "5"}

    - name: Add variables to vars.yaml from multinode_vars.j2
      vars:
        tripleo_scenario: 'true'
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/multinode_vars.j2"
        dest: "{{ rdo_dir }}/vars.yaml"

- name: Run tripleo adoption
  vars: *ooo_vars
  ansible.builtin.import_playbook: deploy_tripleo_run.yaml
