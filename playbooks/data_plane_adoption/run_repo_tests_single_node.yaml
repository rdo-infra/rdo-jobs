- hosts: controller
  gather_facts: false
  vars:
    dpa_dir: "/home/zuul/src/github.com/openstack-k8s-operators/data-plane-adoption"
    rdo_dir: "/home/zuul/src/review.rdoproject.org/rdo-jobs/playbooks/data_plane_adoption"
    standalone_ip: "192.168.122.100"
  tasks:
    - name: Run test preparation in standalone vm
      ansible.builtin.shell:
        ansible-playbook {{ rdo_dir }}/standalone_prepare_tests.yaml -i /home/zuul/{{ standalone_vm_inventory | default("standalone_vm_inventory") }}

    - name: Get bridge used by standalone vm
      become: true
      ansible.builtin.shell:
        virsh dumpxml edpm-compute-0 | grep -oP "(?<=bridge=').*(?=')"
      register: epdm_bridge

    # FIXME: the tag and the address should ideally be calculated from definitions
    # The address should ideally be removed from the address pool available for CNI
    # for allocation.
    - name: Configure access of adoption host to internalapi network
      ansible.builtin.shell: |
        sudo ip link add link "{{ epdm_bridge.stdout }}" name vlan20 type vlan id 20
        sudo ip addr add dev vlan20 172.17.0.222/24
        sudo ip link set up dev vlan20

    - name: Place standalone_ip into vars.yaml for EDPM
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/vars.yaml"
        regexp: '^edpm_node_ip:'
        value: "edpm_node_ip: {{ standalone_ip }}"

    - name: Place standalone_ip into vars.yaml for MariaDB
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/vars.yaml"
        regexp: '^external_mariadb_ip:'
        value: "external_mariadb_ip: {{ standalone_ip }}"

    - name: Place standalone_ip into vars.yaml for OVN
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/vars.yaml"
        regexp: '^external_ovndb_ip:'
        value: "external_ovndb_ip: {{ standalone_ip }}"

    - name: Read the standalone ssh key downloaded from standalone vm
      ansible.builtin.slurp:
        path: /home/zuul/edpm_ssh_key
      register: standalone_key

    - name: Place standalone key into secrets.yaml
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/secrets.yaml"
        regexp: '^edpm_encoded_privatekey:'
        value: "edpm_encoded_privatekey: \"{{ standalone_key['content'] }}\""

    - name: Read the tripleo passwords downloaded from standalone
      ansible.builtin.slurp:
        path: /home/zuul/tripleo-standalone-passwords.yaml
      register: tripleo_passwords

    - name: Place mariadb password into secrets.yaml
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/secrets.yaml"
        regexp: 'external_db_root_password:'
        value: "external_db_root_password: {{ tripleo_passwords['content'] | b64decode | regex_search('MysqlRootPassword:.(.+)', '\\1') | first }}"

    - name: Place glance password into secrets.yaml
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/secrets.yaml"
        regexp: 'glance_password:'
        value: "glance_password: {{ tripleo_passwords['content'] | b64decode | regex_search('GlancePassword:.(.+)', '\\1') | first }}"

    - name: Place placement password into secrets.yaml
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/secrets.yaml"
        regexp: 'placement_password:'
        value: "placement_password: {{ tripleo_passwords['content'] | b64decode | regex_search('PlacementPassword:.(.+)', '\\1') | first }}"

    - name: Place cinder password into secrets.yaml
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/secrets.yaml"
        regexp: 'cinder_password:'
        value: "cinder_password: {{ tripleo_passwords['content'] | b64decode | regex_search('CinderPassword:.(.+)', '\\1') | first }}"

    - name: Set standalone login var controller1_ssh in secrets.yaml
      ansible.builtin.lineinfile:
        path: "{{ rdo_dir }}/secrets.yaml"
        regexp: 'controller1_ssh:'
        value: "controller1_ssh: ssh -i /home/zuul/src/github.com/openstack-k8s-operators/install_yamls/out/edpm/ansibleee-ssh-key-id_rsa root@{{ standalone_ip }}"

    - name: pip install openstackclient for keystone adoption on crc
      become: true
      ansible.builtin.pip:
        name: python-openstackclient
        executable: pip3

    - name: grab the crc VM IP address
      ansible.builtin.command: crc ip
      register: crc_ip

    - name: Set etc hosts entry for keystone glance placement cinder to crc VM IP
      become: true
      ansible.builtin.lineinfile:
        path: "/etc/hosts"
        insertafter: "EOF"
        value: "{{ crc_ip.stdout }} keystone-public-openstack.apps-crc.testing glance-public-openstack.apps-crc.testing placement-public-openstack.apps-crc.testing cinder-public-openstack.apps-crc.testing"

    - name: Fetch hash and set ci_testing_hash fact for periodic
      when: "'periodic' in zuul.job or (force_periodic|default(false)|bool)"
      block:
        - name: Fetch latest c9/antelope podified-ci-testing from dlrn
          ansible.builtin.uri:
            url: https://trunk.rdoproject.org/centos9-antelope/podified-ci-testing/delorean.repo.md5
            return_content: true
          register: latest_podified_ci_testing
          until: latest_podified_ci_testing.status == 200
          retries: 6
          delay: 5

        - name: Insert vars needed for periodic job into test vars.yaml
          ansible.builtin.blockinfile:
            path: "{{ rdo_dir }}/vars.yaml"
            block: |
              periodic: true
              container_registry: quay.rdoproject.org
              container_namespace: podified-antelope-centos9
              container_tag: {{ latest_podified_ci_testing.content }}

    - name: Run data-plane-adoption tests
      community.general.make:
        chdir: "{{ dpa_dir }}"
        target: test-minimal
        params:
          TEST_CONFIG: "{{ rdo_dir }}/ansible.cfg"
          TEST_SECRETS: "{{ rdo_dir}}/secrets.yaml"
          TEST_VARS: "{{ rdo_dir }}/vars.yaml"
          TEST_INVENTORY: "tests/inventory.sample-crc-vagrant.yaml"
      register: make_res
      failed_when: '"failed=0" not in "{{ make_res.stdout_lines[-1:] }}"'
