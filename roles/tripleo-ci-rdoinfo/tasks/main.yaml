# Role to be called by rdoifno TripleO jobs

- name: Create temporary repos
  shell:
    cmd: |
      # This builder, when run from a child job of validate-buildsys-tags
      # configures the temporary repositories created by it
      # This allows to install the packages in that repository and test
      # them.
      set +e -x
      # This job requires variables $RELEASE and $PHASE to be defined.

      PHASE="{{ phase }}"
      RELEASE="{{ zuul.branch }}"

      REQUIRED=0
      MASTER_RELEASE=rocky
      CREPOS_FILE=changed_repos.txt

      if [ -z "$RELEASE" -o -z "$PHASE" ]; then
          echo "ERROR in job definition"
          exit 1
      fi

      if [ $RELEASE = "master" ]; then
          O_RELEASE=$MASTER_RELEASE
      else
          O_RELEASE="$RELEASE"
      fi

      if [[ ( "$RELEASE" == "newton" ) || ( "$RELEASE" == "ocata" ) || ("$RELEASE" == "pike" ) ]];then
          C_RELEASE=common
      else
          C_RELEASE=""
      fi

      # Re-construct the expected repository URL Using zuulv3 ovveride
      #ZUUL_REF=$(echo $ZUUL_REF |cut -f4 -d /)
      #job="validate-buildsys-tags"
      #LOG_PATH="$BASE_LOG_PATH/$ZUUL_PIPELINE/$job/$ZUUL_REF"
      #logs="https://logs.rdoproject.org/$LOG_PATH/"

      # NOTE(pabelanger): Override logs for zuulv3 jobs.
      if [[ -d /home/zuul ]]; then
          logs={{ buildset_artifacts_url }}
      fi

      # If we could not find a working repository, give up
      curl -o $CREPOS_FILE -sf "$logs/repos/changed_repos.txt" || exit 1
      for tag in $O_RELEASE $C_RELEASE
      do
          if grep -q -E "$tag-$PHASE" $CREPOS_FILE; then
              REQUIRED=1
          fi
      done

      if [ $REQUIRED -eq 0 ];then
          echo "INFO: this test is not required"| tee not_required
          exit 0
      fi

      COMMON_TESTING_TAG="cloud7-openstack-common-testing"
      COMMON_RELEASE_TAG="cloud7-openstack-common-release"
      COMMON_TESTING=$(grep -c $COMMON_TESTING_TAG $CREPOS_FILE)
      COMMON_RELEASE=$(grep -c $COMMON_RELEASE_TAG $CREPOS_FILE)

      function create_config(){
          echo "artg_skipped_projects:"
          echo "  - rdoinfo"
          echo "release: $RELEASE"
          if [ $STABLE_REPOSITORIES != false ]; then
              echo "run_tempest: false"
              echo "test_ping: true"
          fi
          echo "dlrn_hash_tag: current-tripleo"
          echo "overcloud_image_url: http://images.rdoproject.org/$RELEASE/rdo_trunk/current-tripleo/overcloud-full.tar"
          echo "ipa_image_url: http://images.rdoproject.org/$RELEASE/rdo_trunk/current-tripleo/ironic-python-agent.tar"
          echo "images:"
          echo "  - name: overcloud-full"
          echo "    url: http://images.rdoproject.org/$RELEASE/rdo_trunk/current-tripleo/overcloud-full.tar"
          echo "    type: tar"
          echo "  - name: ipa_images"
          echo "    url: http://images.rdoproject.org/$RELEASE/rdo_trunk/current-tripleo/ironic-python-agent.tar"
          echo "    type: tar"
          echo "repo_cmd_before: |"
          echo "  sudo yum remove -y rdo-release centos-release-openstack-* centos-release-ceph-* || true;"
          echo "  sudo rpm -e epel-release || true;"
          echo "  sudo rm -rf /etc/yum.repos.d/delorean*;"
          echo "  sudo rm -rf /etc/yum.repos.d/*.rpmsave;"
          echo "  sudo yum clean all"
          echo "repos:"
          if [ $STABLE_REPOSITORIES != false ]; then
              echo "  - type: package"
              echo "    pkg_name: centos-release-openstack-$O_RELEASE"
              echo "    custom_cmd: 'sudo yum install -y --enablerepo=extras'"
          else
              echo "  - type: package"
              echo "    pkg_name: centos-release-ceph-luminous"
              echo "    custom_cmd: 'sudo yum install -y --enablerepo=extras'"
          fi
          INDEX=0
          for repo in $REPOS_URL
          do
              echo "  - type: file"
              echo "    filename: delorean-$INDEX.repo"
              echo "    down_url: $repo"
              ((INDEX++))
          done
          echo "  - type: generic"
          echo "    reponame: centos-opstools"
          echo "    filename: centos-opstools.repo"
          echo "    baseurl: http://mirror.centos.org/centos/7/opstools/x86_64/"
          echo "  - type: generic"
          echo "    reponame: quickstart-centos-base"
          echo "    filename: quickstart-centos-base.repo"
          echo "    baseurl: http://mirror.regionone.rdo-cloud.rdoproject.org/centos/7/os/x86_64/"
          echo "repo_cmd_after: |"
          echo "  sudo yum-config-manager --save --setopt centos-ceph-jewel.gpgcheck=0"
          echo '  {% if not enable_opstools_repo|default(false)|bool %}sudo yum-config-manager --save --setopt centos-opstools.enable=0;'
          echo '  {%endif %}'
          if [ $STABLE_REPOSITORIES != false ]; then
              echo "  sudo yum-config-manager --save --setopt centos-qemu-ev.gpgcheck=0"
              echo "  sudo yum-config-manager --save --setopt centos-openstack-$O_RELEASE.gpgcheck=0"
              echo "  sudo yum-config-manager --disable rdo-trunk-$O_RELEASE-tested"
              if [ $TESTING_REPOSITORY = true ]; then
                  echo "  sudo yum-config-manager --disable centos-openstack-$O_RELEASE"
                  echo "  sudo yum-config-manager --enable centos-openstack-$O_RELEASE-test"
              fi
          fi
          echo "  sudo yum clean all;"
          echo "  sudo yum repolist;"
          echo "  sudo yum update -y"
          if [[ ( "$RELEASE" == "ocata" ) || ( "$RELEASE" == "pike" ) || ("$RELEASE" == "queens" ) ]];then
            echo "  # add bootstrap dependencies tripleo/+bug/1785067"
            echo "  sudo yum install -y openstack-heat-agents"
          fi
          if [ $STABLE_REPOSITORIES != false ]; then
              echo "overcloud_repo_paths:"
              echo "  - \"\$(ls /etc/yum.repos.d/CentOS-OpenStack-$O_RELEASE*)\""
              echo "  - \"\$(ls /etc/yum.repos.d/CentOS-QEMU*)\""
              echo "  - \"\$(ls /etc/yum.repos.d/CentOS-Ceph-*)\""
              INDEX=0
              for repo in $REPOS_URL
              do
                  echo "  - \"/etc/yum.repos.d/delorean-$INDEX.repo\""
                  ((INDEX++))
              done
          fi
          echo "undercloud_rpm_dependencies: >-"
          echo "  python-tripleoclient"
          echo "  ceph-ansible"
          if [ $RELEASE = "master" ]; then
              echo "update_containers: true"
              echo "gating_repo_name: temp-*"
          fi
      }


      case $PHASE in
      testing)
          if [ $RELEASE = master ]; then
              REPOS_URL="http://trunk.rdoproject.org/centos7-master/current-passed-ci/delorean.repo http://trunk.rdoproject.org/centos7-master/delorean-deps.repo"
              STABLE_REPOSITORIES=false
              TESTING_REPOSITORY=false
          else
              REPOS_URL=""
              STABLE_REPOSITORIES=true
              TESTING_REPOSITORY=true
          fi
          if [ $(grep -c $O_RELEASE-$PHASE $CREPOS_FILE) -ne 0 ]; then
              REPO="cloud7-openstack-$O_RELEASE-$PHASE"
              REPOS_URL="$REPOS_URL $logs/repos/$REPO/temp-$REPO.repo"
          fi
          if [ $COMMON_TESTING -ne 0 ];then
              REPOS_URL="$REPOS_URL $logs/repos/$COMMON_TESTING_TAG/temp-$COMMON_TESTING_TAG.repo"
          fi
          create_config | tee -a tripleo.yml
      ;;
      release)
          STABLE_REPOSITORIES=true
          TESTING_REPOSITORY=false
          if [ $(grep -c $O_RELEASE-$PHASE $CREPOS_FILE) -ne 0 ]; then
             REPO="cloud7-openstack-$O_RELEASE-$PHASE"
             REPOS_URL="$logs/repos/$REPO/temp-$REPO.repo"
          else
             REPOS_URL=""
          fi
          if [ $COMMON_RELEASE -ne 0 ];then
              REPOS_URL="$REPOS_URL $logs/repos/$COMMON_RELEASE_TAG/temp-$COMMON_RELEASE_TAG.repo"
          fi
          create_config | tee -a tripleo.yml
      ;;
      esac
    chdir: '{{ ansible_user_dir }}/workspace'
  environment: '{{ zuul | zuul_legacy_vars }}'

- name: Copy tripleo.yml to path where oooq will pick it up
  shell:
    cmd: |
      set -e
      set -x
      # Create directory for used by rdo-rsync-logs
      mkdir -p {{ ansible_user_dir }}/workspace/logs
      # If this configuration is not required, exit early
      if [ -f "{{ ansible_user_dir }}/workspace/not_required" ]; then
          echo "Job for {{ zuul.branch }}-testing not required"
          exit 0
      fi

      sudo rm -f "/home/zuul/src/git.openstack.org/openstack/tripleo-quickstart/config/release/tripleo-ci/{{ zuul.branch }}.yml"
      sudo mv tripleo.yml "/home/zuul/src/git.openstack.org/openstack/tripleo-quickstart/config/release/tripleo-ci/{{ zuul.branch }}.yml"
    chdir: '{{ ansible_user_dir }}/workspace'
  environment: '{{ zuul | zuul_legacy_vars }}'
