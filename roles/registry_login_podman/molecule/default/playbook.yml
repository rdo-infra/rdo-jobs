---
# Copyright 2019 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

####
# Testing that the role fails with information when we are not passing
# credentials for the login
#
- name: Ensure role checks for missing information
  hosts: all
  tasks:
    - set_fact:
        role_failed: false

    - name: ensure role fails when credentials missing
      block:
        - include_role:
            name: registry_login_podman
          vars:
            ansible_python_interpreter: "{{ ansible_user_dir }}/test-python/bin/python"
      rescue:
        - set_fact:
            role_failed: true

    - name: assert on missing credentials
      assert:
        that: role_failed != false
        fail_msg: Role did not fail and it should have while passing no credential
        success_msg: Role failed correctly while passing no credentials

####
# This play tests that podman is chosen in redhat8 and the login successfully
# created a auth cache file
# it also ensure that docker deamon is still running after we remove the client
#
- hosts: redhat8
  vars:
    podman_login_cache: /var/run/user/0/containers/auth.json
    container_registry_logins:
      localhost:5000:
        testuser: testpassword
  tasks:
    - include_role:
        name: registry_login_podman
      vars:
        ansible_python_interpreter: "{{ ansible_user_dir }}/test-python/bin/python"

    - name: check credentials file
      become: true
      stat:
        path: "{{ podman_login_cache }}"
      register: cache_file

    - block:
        - name: assert on file existence
          assert:
            that:
              - cache_file.stat.exists
            fail_msg: Credential file was not created
            success_msg: Credential file correctly present
          failed_when: false
      rescue:
        - debug:
            msg: noop

    - name: Verify credentials can be used
      block:
        - name: create build dir
          file:
            path: /tmp/tempimage
            state: directory

        - name: create Dockerfile
          copy:
            content: |
              FROM scratch
              ADD nothing /
            dest: /tmp/tempimage/Dockerfile

        - name: Build test image
          shell: |
            cd /tmp/tempimage
            touch nothing
            podman build -t localhost:5000/test/testimage:v1 .
          register: build

    - name: Verify authenticated push works
      become: true
      shell: |
        podman push localhost:5000/test/testimage:v1

    - name: Cleanup
      include_role:
        name: registry_login_podman
        tasks_from: cleanup-client
      vars:
        ansible_python_interpreter: "{{ ansible_user_dir }}/test-python/bin/python"
        container_registry_cleanup_client: true

